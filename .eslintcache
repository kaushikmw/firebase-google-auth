[{"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\index.js":"1","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\reportWebVitals.js":"2","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\App.js":"3","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\Login.jsx":"4","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\Home.jsx":"5","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\Header.jsx":"6","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\firebase\\config.jsx":"7","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\firebase\\Auth.jsx":"8","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\firebase\\UserProvider.jsx":"9","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\route\\PageRoute.jsx":"10","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\Default.jsx":"11","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\TestPage.jsx":"12","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\firebase\\Users.jsx":"13","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\firebase\\UserPrivilageProvider.jsx":"14","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\route\\PrivateDMSRoute.jsx":"15","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\SideNavPage.jsx":"16","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\SearchDonor.jsx":"17","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\DonorList.jsx":"18","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\DonorDetails.jsx":"19","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\DonationDetails.jsx":"20","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\CommitmentDetails.jsx":"21","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\GetReferenceDetails.jsx":"22","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\AcceptDonation.jsx":"23","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\DonationReceipt.jsx":"24","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\MyDialog.jsx":"25"},{"size":585,"mtime":1611929876453,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":1686,"mtime":1612416138675,"results":"29","hashOfConfig":"27"},{"size":2491,"mtime":1610777890916,"results":"30","hashOfConfig":"27"},{"size":1277,"mtime":1612343551686,"results":"31","hashOfConfig":"27"},{"size":3315,"mtime":1611155857192,"results":"32","hashOfConfig":"27"},{"size":610,"mtime":1610775629520,"results":"33","hashOfConfig":"27"},{"size":688,"mtime":1610635832516,"results":"34","hashOfConfig":"27"},{"size":1136,"mtime":1612276894308,"results":"35","hashOfConfig":"27"},{"size":962,"mtime":1610721684754,"results":"36","hashOfConfig":"27"},{"size":269,"mtime":1610710735255,"results":"37","hashOfConfig":"27"},{"size":902,"mtime":1610816476235,"results":"38","hashOfConfig":"27"},{"size":829,"mtime":1610777587626,"results":"39","hashOfConfig":"27"},{"size":2072,"mtime":1611244727741,"results":"40","hashOfConfig":"27"},{"size":854,"mtime":1611111123182,"results":"41","hashOfConfig":"27"},{"size":1147,"mtime":1610884364836,"results":"42","hashOfConfig":"27"},{"size":3466,"mtime":1612247449763,"results":"43","hashOfConfig":"27"},{"size":831,"mtime":1611228417998,"results":"44","hashOfConfig":"27"},{"size":16744,"mtime":1612627427949,"results":"45","hashOfConfig":"27"},{"size":1808,"mtime":1612628203523,"results":"46","hashOfConfig":"27"},{"size":478,"mtime":1611229301432,"results":"47","hashOfConfig":"27"},{"size":878,"mtime":1611242319622,"results":"48","hashOfConfig":"27"},{"size":26101,"mtime":1612502014013,"results":"49","hashOfConfig":"27"},{"size":10444,"mtime":1612414324187,"results":"50","hashOfConfig":"27"},{"size":1349,"mtime":1612502883070,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"147kphg",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\index.js",[],["113","114"],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\reportWebVitals.js",[],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\App.js",[],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\Login.jsx",["115"],"import React, { memo,  useState, useEffect} from 'react'\r\n// import { signupWithGoogle } from '../firebase/Auth';\r\nimport firebase from \"../firebase/config\";\r\nimport 'firebase/auth';\r\nimport { useSession } from '../firebase/UserProvider';\r\nimport { createUserDocument } from '../firebase/Users';\r\n\r\n\r\nexport default memo(function Login(props) {\r\n\r\n    const [invalidEmail, setInvalidEmail] = useState(false);\r\n    const {user} = useSession();\r\n\r\n\r\n   const signIn = () => {\r\n       const provider = new firebase.auth.GoogleAuthProvider();\r\n    //    provider.setCustomParameters({hd: 'bmspune.org',prompt: 'select_account'});\r\n        provider.setCustomParameters({hd: 'bmspune.org'});\r\n    //    const signInResult = signupWithGoogle();\r\n         firebase.auth().signInWithPopup(provider).then(async (result) => {\r\n            var loggedInUser = result.user;\r\n            console.log(\"user email\");console.log(user);\r\n            const userEmail = loggedInUser.email;\r\n            if(userEmail.split('@')[1] !== 'bmspune.org') {\r\n                setInvalidEmail(true);\r\n                loggedInUser.delete();\r\n            }else{\r\n                createUserDocument(loggedInUser);\r\n                props.history.push(\"/home\");\r\n            } \r\n            \r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n       \r\n   }\r\n\r\n   useEffect(() => {\r\n       if(user){\r\n        props.history.push(\"/home\");\r\n       }\r\n   }, [user])\r\n    return (\r\n    <>\r\n                <div id=\"login\">\r\n                <h2 className=\"text-center text-blue pt-5\">Welcome to BMS Intranet</h2>\r\n            \r\n                <div id=\"login-row\" className=\"row justify-content-center d-flex\">\r\n                        {\r\n                        !user ? (\r\n                            <div id=\"login-box\" className=\"col-md-12 justify-content-center d-flex\">\r\n                            <div><button className=\"btn btn-primary text-center\"\r\n                            onClick={signIn}>Sign in with bmspune.org account</button></div>\r\n                        </div>)\r\n                         :\r\n                        (\r\n                            <div>You have already logged in as {user.displayName} with email as {user.email}</div>\r\n                        )\r\n                        }\r\n                        \r\n                        {(invalidEmail) && <div>The email id is not allowed</div>}\r\n                </div>\r\n            \r\n        </div>\r\n        \r\n    </>\r\n    );\r\n})\r\n","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\Home.jsx",["116"],"import React, { memo } from 'react'\r\nimport { useSession } from '../firebase/UserProvider';\r\nimport logo from '../img/BMSLogo.jpg';\r\nexport default memo(function Home() {\r\n\r\n    const {user} = useSession();\r\n    \r\n    return (\r\n        <div>\r\n            <div id=\"home\">\r\n            <h2 className=\"text-center text-blue pt-5\">Welcome Home!</h2>\r\n            <div className=\"container\">\r\n                <div id=\"login-row\" className=\"row justify-content-center align-items-center\">\r\n                    <div id=\"login-column\" className=\"col-md-6\">\r\n                        <div id=\"login-box\" className=\"col-md-12 justify-content-center d-flex\">\r\n                            {!!user && <div> Welcome {user.displayName}</div>}\r\n                        </div>\r\n                        <div className=\"justify-content-center d-flex\">\r\n                                {!!user && <div><img src={user.photoURL} alt=\"Profile\" className=\"rounded-circle img-thumbnail img-fluid\"/>\r\n                                 {/* <img src={logo} alt='BMS Logo' /> */}\r\n                                 </div>\r\n                                }\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n})\r\n","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\Header.jsx",["117"],"import React, { memo } from 'react'\r\nimport { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport firebase from '../firebase/config';\r\nimport { GetUserPrivilages } from '../firebase/UserPrivilageProvider';\r\nimport { useSession } from '../firebase/UserProvider';\r\n// import {resetPrivilages} from '../firebase/UserProvider';\r\nexport default memo(function Header(props) {\r\n    const[menu, setMenu] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const toggleMenu = () => {\r\n        setMenu(!menu);\r\n    }\r\n\r\n    const signOutUser = () => {\r\n        firebase.auth().signOut();\r\n        // resetPrivilages()\r\n        history.push(\"/login\");\r\n    }\r\n    const {user} = useSession();\r\n\r\n    const privilages = GetUserPrivilages();\r\n    const showMenu = `collapse navbar-collapse ml-5 ${menu ? \"show\" : \"\"}`;\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-md bg-white navbar-dark\">\r\n                <div><Link to=\"/login\">Logo</Link></div>\r\n                <button className=\"navbar-toggler\" type=\"button\" onClick={toggleMenu}>\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className={showMenu} id=\"collapsibleNavbar\">\r\n                    <div className=\"row w-100\">\r\n                        <div className=\"col-3\">\r\n                            {!!user && \r\n                                <ul className=\"navbar-nav \">\r\n                                    <li className=\"nav-item\">\r\n                                        <Link className=\"nav-link text-dark\" to=\"/home\">Home</Link>\r\n                                    </li>\r\n                                    {\r\n                                        privilages.canAccessDMS && \r\n                                        <li className=\"nav-item\">\r\n                                            <Link className=\"nav-link  text-dark\" to=\"/donorsearch\">Donor Management System</Link>\r\n                                        </li>\r\n                                    }\r\n                                    \r\n                                    <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link  text-dark\" to=\"/donordetails/4OkDMxz6QjYNgPF710jE\">Donor Details</Link>\r\n                                    </li>    \r\n                                </ul>\r\n                        }\r\n                        </div>\r\n                        <div className=\"col-6 text-center display-1\"><h1>The Title here</h1></div>\r\n                        \r\n                        <div className=\"col-3  text-dark text-right\">\r\n                            <button className=\"btn brn-link\">\r\n                                <img src={user ? user.photoURL : ''} className=\"rounded-circle\" style={{height: '32px'}} />\r\n                            </button>\r\n                            <div id=\"profileImageMenu\" className='collapse navbar-collapse'>\r\n\r\n                            </div>\r\n                            {!!user &&\r\n                            <button className=\"btn btn-link  text-dark\" onClick = {signOutUser} >Logout</button>}\r\n                            </div>\r\n                    </div>\r\n                    \r\n                </div>  \r\n            </nav>\r\n        </div>\r\n    )\r\n})\r\n","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\firebase\\config.jsx",[],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\firebase\\Auth.jsx",[],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\firebase\\UserProvider.jsx",["118"],"import React, {  } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport { useState,useContext } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { firestore } from \"./config\";\r\n\r\n\r\nexport const UserContext = React.createContext();\r\n\r\nexport const UserProvider = (props) => {\r\n\r\n    const [session, setSession] = useState({user: null, loading: false});\r\n    \r\n    useEffect(() => {\r\n        const unsubsribe = firebase.auth().onAuthStateChanged(async (loggedInUser) => {\r\n            if(loggedInUser){\r\n                let userEmail =  loggedInUser.email;\r\n                if(userEmail.split('@')[1] === 'bmspune.org'){\r\n                    setSession({user: loggedInUser, loading: false});\r\n                    \r\n                }\r\n            }else{\r\n                setSession({user:null, loading: false});\r\n            }\r\n        });\r\n        return () => unsubsribe();\r\n    }, []);\r\n\r\n    return(\r\n        <UserContext.Provider value={session}>\r\n            {!session.loading && props.children}\r\n        </UserContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useSession = () => {\r\n    return  useContext(UserContext);\r\n}","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\route\\PageRoute.jsx",[],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\Default.jsx",[],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\TestPage.jsx",[],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\firebase\\Users.jsx",[],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\firebase\\UserPrivilageProvider.jsx",["119","120"],"import React, {  } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport { useState,useContext } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { firestore } from \"./config\";\r\nimport { useSession } from \"./UserProvider\";\r\n\r\nexport const UserPrivilageContext = React.createContext();\r\n\r\nexport const UserPrivilageProvider = (props) => {\r\n\r\n    const [privilages, setPrivilages] = useState({canAccessDMS: false,\r\n                                                canAccessFMS: false,\r\n                                                canCreateDMS: false,\r\n                                                canReadDMS: false,\r\n                                                canUpdateDMS: false,\r\n                                                isAdmin: false,\r\n                                                 language: 'English',\r\n                                                loading: false});\r\n    const {user} = useSession();\r\n    \r\n    useEffect(() => {\r\n        if(user){\r\n            const docRef = firestore.collection(`users`).doc(user.uid)\r\n            .onSnapshot((doc) => {\r\n                console.log('logged in user');\r\n                console.log(doc.data());\r\n                let userData = doc.data();\r\n                setPrivilages({\r\n                    canAccessDMS: userData.dms.canAccess,\r\n                    canCreateDMS: userData.dms.canCreate,\r\n                    canUpdateDMS: userData.dms.canUpdateDMS,\r\n                    canAccessFMS: userData.canAccessFMS,\r\n                    isAdmin: userData.isAdmin,\r\n                    language: userData.language,\r\n                })\r\n            });\r\n        }\r\n    }, [user]);\r\n\r\n    return(\r\n        <UserPrivilageContext.Provider value={privilages}>\r\n            {!privilages.loading && props.children}\r\n        </UserPrivilageContext.Provider>\r\n    );\r\n}\r\n\r\nexport const resetUserPrivilages = () => {\r\n\r\n}\r\nexport const GetUserPrivilages = () => {\r\n    return  useContext(UserPrivilageContext);\r\n}","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\route\\PrivateDMSRoute.jsx",[],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\SideNavPage.jsx",["121","122"],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\SearchDonor.jsx",["123","124"],"import React, { memo, useState,  } from 'react'\r\nimport { firestore } from '../firebase/config';\r\nimport DonorList from './DonorList';\r\n// import DonorList from './DonorList';\r\n\r\nexport default memo(function SearchDonor() {\r\n    const [donorName, setDonorName] = useState('');\r\n    const [pan, setPan] = useState('');\r\n\r\n    const[queryResult, setQueryResult] = useState(null);\r\n    return (\r\n        <div>\r\n            <div className='justify-content-center d-flex'>\r\n                <h2>Search Donor</h2>\r\n            </div>\r\n            <div className=\"row justify-content-center d-flex\">\r\n                \r\n                <form className=\"form-inline \" onSubmit= {async e =>  {\r\n                    e.preventDefault();\r\n                    console.log(`donorName: ${donorName}`);\r\n                    console.log(`pan: ${pan}`);\r\n                    const query = firestore.collection(`donors`)\r\n                         .where('pan', '>=', pan);\r\n                     const snapshot  = await query.get({source: 'server'})\r\n                    .then(QuerySnapshot  => {\r\n                        console.log('querySnapshot');console.log(QuerySnapshot);\r\n                         let donorList = [];                       \r\n                        QuerySnapshot.forEach(donor => {\r\n                            donorList.push({\r\n                                donorId: donor.id,\r\n                                fullName: donor.data().fullName,\r\n                                pan: donor.data().pan,\r\n                            });\r\n                        });//End of QuerySnapshot.forEach\r\n\r\n                         setQueryResult(donorList);                         \r\n                     });\r\n                     \r\n                     \r\n                }}>\r\n\r\n                        {/* <label className='ml-2' for=\"donorName\">Donor Name:</label>\r\n                        <input type=\"text\" className=\"form-control m-2\" id=\"donorName\" \r\n                        placeholder=\"Enter donor name here\" name=\"donorName\"\r\n                        onChange={(e) => setDonorName(e.target.value)}/> */}\r\n\r\n                        <label className='ml-2'>PAN No:</label>\r\n                        <input type=\"text\" className=\"form-control m-2\" id=\"pan\" \r\n                        placeholder=\"Enter PAN\" name=\"pan\" \r\n                        onChange = {(e) => setPan(e.target.value)}/>\r\n\r\n                        <button type=\"submit\" className=\"btn btn-primary m-2\">Search</button>\r\n                    \r\n                </form> \r\n                              \r\n            </div>\r\n            <div className='card border-top-0 rounded-0'>\r\n                <div className=\"card-body py-2 justify-content-center d-flex\">\r\n                    <div className=\"card-title font-weight-bold m-0\">\r\n                    Result\r\n                    </div>\r\n                </div>    \r\n            </div>\r\n            {queryResult != null && <div className='card border-top-0 rounded-0'>\r\n                <div className=\"card-body py-2 justify-content-center d-flex\">\r\n                    <div className=\"card-title font-weight-bold m-0\">\r\n                        {/* <DonorList queryResult={queryResult} /> */}\r\n                        Query Results here..\r\n                        <DonorList queryResult={queryResult} />                                              \r\n                    </div>\r\n                </div>    \r\n            </div>}\r\n        </div>\r\n    )\r\n})\r\n","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\DonorList.jsx",[],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\DonorDetails.jsx",["125","126","127","128","129","130","131"],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\DonationDetails.jsx",["132","133","134","135","136","137"],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\CommitmentDetails.jsx",[],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\GetReferenceDetails.jsx",["138","139"],"import React, { memo, useEffect, useState } from 'react'\r\nimport { firestore } from '../firebase/config';\r\n\r\nexport default memo(function GetReferenceDetails(props) {\r\n    \r\n    const [refDetails, setRefDetails] = useState('');\r\n    useEffect(async () => {\r\n        const refId = props.refId;\r\n        console.log(`refId: ${refId}`);\r\n        console.log(`firestore: ${!!firestore}`);\r\n        if(!!firestore && refId != null && refId.length > 0){\r\n            await firestore.collection('donors').doc(refId).onSnapshot(snapshot => {\r\n                if (snapshot.exists) {\r\n                    setRefDetails(snapshot.data().fullName);\r\n                }\r\n            });//End of await firestore.collection('donors').\r\n        }//end of if(!!firestore)\r\n        \r\n    }, []);//End of useEffect \r\n    return (\r\n        <div>\r\n            {refDetails}\r\n        </div>\r\n    )\r\n})\r\n","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\AcceptDonation.jsx",["140","141","142","143"],"import React, { memo, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Redirect, useHistory, useParams } from \"react-router-dom\";\r\nimport { firestore } from \"../firebase/config\";\r\nimport { GetUserPrivilages } from \"../firebase/UserPrivilageProvider\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport { ErrorMessage } from \"@hookform/error-message\";\r\n\r\nexport default memo(function AcceptDonation(props) {\r\n  const { register, setValue, errors, handleSubmit } = useForm();\r\n  const privilages = GetUserPrivilages;\r\n  const params = useParams();\r\n  const history = useHistory();\r\n\r\n  const [donorRef, setDonorRef] = useState(\"\"); //Store donor ref's id\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const [totalDonation, setTotalDonation] = useState(0); //Total Donation\r\n  const [totalCommitment, setTotalCommitment] = useState(0); //Total Commitment\r\n  const [donorRefSearchQuery, setDonorRefSearchQuery] = useState(\"\"); //To store the query string of other donor ref\r\n  const [donorRefList, setDonorRefList] = useState(null); //To store the result of donor ref search\r\n  const [donorRefOption, setDonorRefOption] = useState(\"selfDonor\");\r\n  const [donorRefError, setDonorRefError] = useState(false);\r\n  const [donationMode, setDonationMode] = useState(\"Cheque\");\r\n  const [type, setType] = useState(\"\"); //To store donation type\r\n  const [dateError, setDateError] = useState(false);\r\n\r\n  const handleModeChange = (e) => {\r\n    setDonationMode(e.target.value);\r\n  };\r\n\r\n  const updateDonorRefValue = (donorRefId, donorRefFullName) => {\r\n    setDonorRef(donorRefId);\r\n    setDonorRefList(null);\r\n    setDonorRefSearchQuery(donorRefFullName);\r\n  };\r\n\r\n  const handleCollectedByOptions = (e) => {\r\n    setDonorRefOption(e.target.value);\r\n  }; //End of handleCollectedByOptions function\r\n\r\n  const handleDonorRefSearch = async (e) => {\r\n    e.preventDefault();\r\n    setDonorRefError(false);\r\n    console.log(\"in handleDonorRefSearch\");\r\n    const query = firestore\r\n      .collection(`donors`)\r\n      .where(\"fullName\", \">=\", donorRefSearchQuery)\r\n      .orderBy(\"fullName\")\r\n      .limit(3);\r\n    // console.log('first:');\r\n    // console.log(firstQuery);\r\n    const snapshot = await query\r\n      .get({ source: \"server\" })\r\n      .then((querySnapshot) => {\r\n        let donorRefList = [];\r\n        console.log(\"querySnapshot\");\r\n        console.log(querySnapshot);\r\n        querySnapshot.forEach((donorRef) => {\r\n          console.log(`Donor Ref Name: ${donorRef.data().fullName}`);\r\n          donorRefList.push({\r\n            donorId: donorRef.id,\r\n            fullName: donorRef.data().fullName,\r\n          });\r\n        }); //End of querySnapshot.forEach()\r\n        setDonorRefList(donorRefList);\r\n      }); //End of then(querySnapshot => {})\r\n  }; //end of const handleDonorRefSearch\r\n\r\n  useEffect(() => {\r\n    const donorId = params.donorId;\r\n    setType(params.type);\r\n    const docRef = firestore.collection(\"donors\").doc(donorId);\r\n    docRef.onSnapshot((snapshot) => {\r\n      if (snapshot.exists) {\r\n        const data = snapshot.data();\r\n        // setDonorRef(data.reference);\r\n        setTotalDonation(\r\n          data.totalDonation !== \"\" && data.totalDonation !== undefined\r\n            ? data.totalDonation\r\n            : 0\r\n        );\r\n        setTotalCommitment(\r\n          data.totalCommitment !== \"\" && data.totalCommitment !== undefined\r\n            ? data.totalCommitment\r\n            : 0\r\n        );\r\n        setValue(\"fullName\", data.fullName);\r\n        setValue(\"pan\", data.pan);\r\n        setValue(\"spiritualName\", data.spiritualName);\r\n\r\n        setValue(\r\n          \"dob\",\r\n          data.dob !== \"\" && data.dob !== undefined ? data.dob.toDate() : \"\"\r\n        );\r\n        setValue(\"email\", data.email);\r\n        setValue(\"phone\", data.phone);\r\n\r\n        setValue(\r\n          \"addressLine1\",\r\n          data.address !== \"\" && data.address !== undefined\r\n            ? data.address.addressLine1\r\n            : \"\"\r\n        );\r\n        setValue(\r\n          \"addressLine2\",\r\n          data.address !== \"\" && data.address !== undefined\r\n            ? data.address.addressLine2\r\n            : \"\"\r\n        );\r\n        setValue(\r\n          \"city\",\r\n          data.address !== \"\" && data.address !== undefined\r\n            ? data.address.city\r\n            : \"\"\r\n        );\r\n        setValue(\r\n          \"pin\",\r\n          data.address !== \"\" && data.address !== undefined\r\n            ? data.address.pin\r\n            : \"\"\r\n        );\r\n\r\n        setValue(\r\n          \"state\",\r\n          data.address !== \"\" && data.address !== undefined\r\n            ? data.address.state\r\n            : \"\"\r\n        );\r\n        setValue(\r\n          \"country\",\r\n          data.address !== \"\" && data.address !== undefined\r\n            ? data.address.country\r\n            : \"\"\r\n        );\r\n\r\n        setValue(\"reference\", data.reference);\r\n      } //End of if(snapshot.exists)\r\n    }); //End of const docRef ...\r\n  }, []); //End of useEffect\r\n\r\n  const acceptDonation = async (donationData) => {\r\n    let canProcess = false;\r\n    console.log(donationData);\r\n\r\n    //If the donor ref is self\r\n    let donorReference = \"\";\r\n    //The other option is selected but ref is not selected yet\r\n    if (donorRefOption === \"otherDonor\" && donorRef === \"\") {\r\n      setDonorRefError(true);\r\n      // donorReference = params.donorId;\r\n    } else {\r\n      //Check for valid donation date based on the type\r\n      //if type = Donation, date should today or in past\r\n      //else date should be in future\r\n      let tDate = new Date();\r\n      let dDate = new Date(donationData.date);\r\n      if (type === \"Donation\" && dDate.getTime() <= tDate.getTime()) {\r\n        canProcess = true;\r\n      } else if (type === \"Commitment\" && dDate.getTime() > tDate.getTime()) {\r\n        canProcess = true;\r\n      } else {\r\n        setDateError(true);\r\n      }\r\n    } //End of else if(donorRefOption === 'selfDonor')\r\n    if (canProcess) {\r\n      setisLoading(true);\r\n      if (donorRefOption === \"otherDonor\") {\r\n        //If donor ref is other and selected a valid donor\r\n        donorReference = donorRef;\r\n      } else if (donorRefOption === \"selfDonor\") {\r\n        //If donor ref is self, set the value as self\r\n        donorReference = \"Self\";\r\n      }\r\n\r\n      await firestore\r\n        .collection(\"donors\")\r\n        .doc(params.donorId)\r\n        .collection(\"donations\")\r\n        .add({\r\n          amount: donationData.amount,\r\n          bank: donationData.bank !== undefined ? donationData.bank : \"\",\r\n          bankRef: donationData.bankRef !== undefined ? donationData.bank : \"\",\r\n          bankRefDate:\r\n            donationData.bankRefDate !== undefined\r\n              ? new Date(donationData.bankRefDate)\r\n              : \"\",\r\n          collectedBy: donorReference,\r\n          date: new Date(donationData.date),\r\n          mode: donationData.mode,\r\n          trust: donationData.trust,\r\n          created: new Date(),\r\n          type: type,\r\n        })\r\n        .then(async (res) => {\r\n          //Update the total donation or commitment amount of the donor as per the type value\r\n          if (type === \"Donation\") {\r\n            await firestore\r\n              .collection(\"donors\")\r\n              .doc(params.donorId)\r\n              .update({\r\n                totalDonation:\r\n                  parseInt(totalDonation) + parseInt(donationData.amount),\r\n              });\r\n          } else {\r\n            await firestore\r\n              .collection(\"donors\")\r\n              .doc(params.donorId)\r\n              .update({\r\n                totalCommitment:\r\n                  parseInt(totalCommitment) + parseInt(donationData.amount),\r\n              });\r\n          }\r\n\r\n          //If the collected by other then update that other person's total collection\r\n          if (\r\n            donorRefOption === \"otherDonor\" &&\r\n            donorReference !== params.donorId\r\n          ) {\r\n            //Get his total collection\r\n            const donorRef = firestore.collection(\"donors\").doc(donorReference);\r\n            const donorRefDoc = await donorRef.get();\r\n            if (donorRefDoc.exists) {\r\n              console.log(donorRefDoc.data());\r\n              let donorRefTotalCollection = donorRefDoc.data().totalCollection;\r\n              let donorRefTotalCommitmentCollection = donorRefDoc.data()\r\n                .totalCommitmentCollection;\r\n              //Update the total collection\r\n              if (type === \"Donation\") {\r\n                await firestore\r\n                  .collection(\"donors\")\r\n                  .doc(donorReference)\r\n                  .update({\r\n                    totalCollection:\r\n                      parseInt(donorRefTotalCollection) +\r\n                      parseInt(donationData.amount),\r\n                  });\r\n              } else {\r\n                await firestore\r\n                  .collection(\"donors\")\r\n                  .doc(donorReference)\r\n                  .update({\r\n                    totalCommitmentCollection:\r\n                      parseInt(donorRefTotalCommitmentCollection) +\r\n                      parseInt(donationData.amount),\r\n                  });\r\n              }\r\n            } //end of if(donorRefDoc.exists)\r\n          } //end of if(donorRefOption === 'otherDonor' && donorReference !== params.donorId)\r\n          setisLoading(false);\r\n          console.log(`result id: ${res.id}`);\r\n          history.push(`/donordetails/${params.donorId}`); //Navigate back to donor details\r\n        });\r\n    } //End of if(canProcess)\r\n  }; //End of acceptDonation\r\n  const formClass = `${isLoading ? \"ui form loading\" : \"\"}`;\r\n  return (\r\n    <div>\r\n      <div className=\"card\">\r\n        <div className=\"justify-content-center d-flex\">\r\n          <h2>Accpet {type}</h2>\r\n        </div>\r\n        <form className={formClass} onSubmit={handleSubmit(acceptDonation)}>\r\n          <label className=\"d-flex\">\r\n            <h4>Personal Details:</h4>\r\n          </label>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">Donor Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control ml-2\"\r\n                id=\"fullName\"\r\n                name=\"fullName\"\r\n                ref={register()}\r\n                readOnly\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">PAN:</label>\r\n              <input\r\n                type=\"input\"\r\n                className=\"form-control mr-2  p-2\"\r\n                ref={register()}\r\n                readOnly\r\n                name=\"pan\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <label className=\"d-flex\">\r\n            <h4>Communication Details:</h4>\r\n          </label>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">Email:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control ml-2\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                ref={register()}\r\n                readOnly\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">Phone:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control p-2\"\r\n                name=\"phone\"\r\n                readOnly\r\n                ref={register()}\r\n              />\r\n            </div>\r\n          </div>\r\n          <label className=\"d-flex\">\r\n            <h4>Address:</h4>\r\n          </label>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">Address Line1:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control ml-2\"\r\n                id=\"addressLine1\"\r\n                name=\"addressLine1\"\r\n                readOnly\r\n                ref={register()}\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">Address Line2:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control p-2\"\r\n                name=\"addressLine2\"\r\n                readOnly\r\n                ref={register()}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">City:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control ml-2\"\r\n                id=\"city\"\r\n                name=\"city\"\r\n                readOnly\r\n                ref={register()}\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">Pin Code:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control p-2\"\r\n                name=\"pin\"\r\n                readOnly\r\n                ref={register()}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">State:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control ml-2\"\r\n                id=\"state\"\r\n                name=\"state\"\r\n                readOnly\r\n                ref={register()}\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">Country:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control p-2\"\r\n                name=\"country\"\r\n                readOnly\r\n                ref={register()}\r\n              />\r\n            </div>\r\n          </div>\r\n          <label className=\"d-flex\">\r\n            <h4>Donation Details:</h4>\r\n          </label>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">Amount:</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control p-2\"\r\n                name=\"amount\"\r\n                ref={register({\r\n                  required: `Please enter a ${type} amount`,\r\n                  min: {\r\n                    value: 1,\r\n                    message: `Minimum ${type} amount should be more than zero`,\r\n                  },\r\n                  validate: {\r\n                    cashValidation: (value) =>\r\n                      donationMode === \"Cash\" ? value < 2001 : true,\r\n                  },\r\n                })}\r\n              />\r\n              {errors.amount?.type === \"cashValidation\" && (\r\n                <p className=\"text-danger\">\r\n                  You cannot accept more than Rs 2000 as cash\r\n                </p>\r\n              )}\r\n              <ErrorMessage\r\n                errors={errors}\r\n                name=\"amount\"\r\n                render={({ message }) => (\r\n                  <p className=\"text-danger\">{message}</p>\r\n                )}\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">{type} Date:</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control p-2\"\r\n                name=\"date\"\r\n                ref={register({\r\n                  required: `Please enter ${type} date.`,\r\n                })}\r\n                onChange={(e) => {\r\n                  setDateError(false);\r\n                }}\r\n              />\r\n              {dateError &&\r\n                (type === \"Donation\" ? (\r\n                  <p className=\"text-danger\">\r\n                    Donation cannot be acepted for future date.\r\n                  </p>\r\n                ) : (\r\n                  <p className=\"text-danger\">\r\n                    Commitment cannot be taken of past date or today.\r\n                  </p>\r\n                ))}\r\n              <ErrorMessage\r\n                errors={errors}\r\n                name=\"date\"\r\n                render={({ message }) => (\r\n                  <p className=\"text-danger\">{message}</p>\r\n                )}\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">Mode:</label>\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    id=\"Cheque\"\r\n                    name=\"mode\"\r\n                    value=\"Cheque\"\r\n                    ref={register({\r\n                      required: `Please select ${type} mode.`,\r\n                    })}\r\n                    onChange={handleModeChange}\r\n                    checked={donationMode === \"Cheque\"}\r\n                  />{\" \"}\r\n                  <label for=\"Cheque\">Cheque</label>\r\n                  <br />\r\n                  {type === \"Donation \" && (\r\n                    <span>\r\n                      <input\r\n                        type=\"radio\"\r\n                        id=\"DD\"\r\n                        name=\"mode\"\r\n                        value=\"DD\"\r\n                        ref={register({\r\n                          required: `Please select ${type} mode.`,\r\n                        })}\r\n                        onChange={handleModeChange}\r\n                        checked={donationMode === \"DD\"}\r\n                      />{\" \"}\r\n                      <label for=\"DD\">DD</label>\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <div className=\"col\">\r\n                  {type === \"Donation\" && (\r\n                    <span>\r\n                      <input\r\n                        type=\"radio\"\r\n                        id=\"NEFT\"\r\n                        name=\"mode\"\r\n                        value=\"NEFT\"\r\n                        ref={register({\r\n                          required: `Please select ${type} mode.`,\r\n                        })}\r\n                        onChange={handleModeChange}\r\n                        checked={donationMode === \"NEFT\"}\r\n                      />{\" \"}\r\n                      <label for=\"NEFT\">NEFT</label>\r\n                      <br />\r\n                    </span>\r\n                  )}\r\n                  <input\r\n                    type=\"radio\"\r\n                    id=\"Cash\"\r\n                    name=\"mode\"\r\n                    value=\"Cash\"\r\n                    ref={register({\r\n                      required: `Please select ${type} mode.`,\r\n                    })}\r\n                    onChange={handleModeChange}\r\n                    checked={donationMode === \"Cash\"}\r\n                  />{\" \"}\r\n                  <label for=\"Cash\">Cash</label>\r\n                  <br />\r\n                  <ErrorMessage\r\n                    errors={errors}\r\n                    name=\"mode\"\r\n                    render={({ message }) => (\r\n                      <p className=\"text-danger\">{message}</p>\r\n                    )}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {donationMode !== \"Cash\" && donationMode !== \"Other\" && (\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col\">\r\n                <label className=\"m-2\">Bank Name:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"bank\"\r\n                  name=\"bank\"\r\n                  ref={register({\r\n                    required: \"Please enter bank name\",\r\n                  })}\r\n                />\r\n                <ErrorMessage\r\n                  errors={errors}\r\n                  name=\"bank\"\r\n                  render={({ message }) => (\r\n                    <p className=\"text-danger\">{message}</p>\r\n                  )}\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <label className=\"m-2\">{donationMode} Reference:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control ml-2\"\r\n                  id=\"bankRef\"\r\n                  name=\"bankRef\"\r\n                  ref={register({\r\n                    required: `Please enter ${donationMode} reference.`,\r\n                  })}\r\n                />\r\n                <ErrorMessage\r\n                  errors={errors}\r\n                  name=\"bankRef\"\r\n                  render={({ message }) => (\r\n                    <p className=\"text-danger\">{message}</p>\r\n                  )}\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <label className=\"m-2\">{donationMode} Date:</label>\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control ml-2\"\r\n                  id=\"bankRefDate\"\r\n                  name=\"bankRefDate\"\r\n                  ref={register({\r\n                    required: `Please enter ${donationMode} date`,\r\n                  })}\r\n                />\r\n                <ErrorMessage\r\n                  errors={errors}\r\n                  name=\"bankRefDate\"\r\n                  render={({ message }) => (\r\n                    <p className=\"text-danger\">{message}</p>\r\n                  )}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n          <label className=\"d-flex\">\r\n            <h4>Additional Details:</h4>\r\n          </label>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">To Trust:</label>\r\n              <br></br>\r\n              <input\r\n                type=\"radio\"\r\n                id=\"SCSS\"\r\n                name=\"trust\"\r\n                value=\"SCSS\"\r\n                ref={register({\r\n                  required: `Please select the trust to which the ${type} is made.`,\r\n                })}\r\n              />{\" \"}\r\n              <label for=\"SCSS\">Sri Chaitanya Shikshan Sanstha</label>\r\n              <br />\r\n              <input\r\n                type=\"radio\"\r\n                id=\"CREST\"\r\n                name=\"trust\"\r\n                value=\"CREST\"\r\n                ref={register({\r\n                  required: `Please select the trust to which the ${type} is made.`,\r\n                })}\r\n              />{\" \"}\r\n              <label for=\"CREST\">\r\n                Chaitanya Research & Edcational Services Trust\r\n              </label>{\" \"}\r\n              <br />\r\n              <ErrorMessage\r\n                errors={errors}\r\n                name=\"trust\"\r\n                render={({ message }) => (\r\n                  <p className=\"text-danger\">{message}</p>\r\n                )}\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">Collected By:</label>\r\n              <br />\r\n              <input\r\n                type=\"radio\"\r\n                id=\"selfDonor\"\r\n                name=\"collectedBy\"\r\n                value=\"selfDonor\"\r\n                checked={donorRefOption === \"selfDonor\"}\r\n                onChange={handleCollectedByOptions}\r\n              />{\" \"}\r\n              <label for=\"selfDonor\">Self</label>\r\n              <br />\r\n              <input\r\n                type=\"radio\"\r\n                id=\"otherDonor\"\r\n                name=\"collectedBy\"\r\n                value=\"otherDonor\"\r\n                checked={donorRefOption === \"otherDonor\"}\r\n                onChange={handleCollectedByOptions}\r\n              />{\" \"}\r\n              <label for=\"otherDonor\">Other</label>\r\n            </div>\r\n            <div className=\"col\">\r\n              {donorRefOption === \"otherDonor\" ? (\r\n                <div>\r\n                  <label className=\"m-2\">\r\n                    If collected by is \"Other\", please search the same here\r\n                  </label>\r\n                  <br />\r\n                  <input\r\n                    placeholder=\"Search Here\"\r\n                    name=\"searchRef\"\r\n                    value={donorRefSearchQuery}\r\n                    onChange={(e) => setDonorRefSearchQuery(e.target.value)}\r\n                  />\r\n                  <button\r\n                    className=\"btn btn-outline\"\r\n                    type=\"button\"\r\n                    onClick={handleDonorRefSearch}\r\n                  >\r\n                    <AiOutlineSearch />\r\n                  </button>\r\n                  <br />\r\n                  {donorRefList && (\r\n                    <DonorRefList\r\n                      queryList={donorRefList}\r\n                      updateDonorRefValue={updateDonorRefValue}\r\n                    />\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {donorRefError && (\r\n                <div className=\"text-danger\">\r\n                  Please select a reference for the {type}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"row mb-3 \">\r\n            <div className=\"col justify-content-center d-flex\">\r\n              <button type=\"submit\" className=\"btn btn-primary mr-2\">\r\n                Accept {type}\r\n              </button>{\" \"}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary ml-2\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  history.push(`/donordetails/${params.donorId}`);\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport const DonorRefList = (props) => {\r\n  const donorRefQueryList = props.queryList;\r\n\r\n  const donorRefList = donorRefQueryList.map((donorRef) => {\r\n    return (\r\n      <>\r\n        <div className=\"list-group-item d-flex list-group-item-info\">\r\n          <button\r\n            className=\"btn btn-link\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              props.updateDonorRefValue(donorRef.donorId, donorRef.fullName);\r\n            }}\r\n            key={donorRef.donorId}\r\n          >\r\n            {donorRef.fullName}\r\n          </button>\r\n        </div>\r\n      </>\r\n    );\r\n  });\r\n\r\n  return <div>{donorRefList}</div>;\r\n};\r\n","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\DonationReceipt.jsx",["144","145","146","147","148","149","150","151","152"],"import React, { memo, useEffect, useState } from 'react'\r\nimport { Page, Text, View, Document, StyleSheet, Image } from \"@react-pdf/renderer\";\r\nimport logo from '../img/BMSLogo.jpg';\r\nimport { useSession } from '../firebase/UserProvider';\r\nimport { firestore } from '../firebase/config';\r\n\r\n// Create styles\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n    //   flexDirection: \"row\",\r\n      backgroundColor: '#ffffff',\r\n      borderTop: '5px solid red'\r\n    },\r\n    section: {\r\n      margin: 10,\r\n      padding: 10,\r\n    //   border: '5px solid red',\r\n      borderColor: '#000000',\r\n      borderWidth : 5,\r\n      borderStyle: 'solid',\r\n      textAlign: 'center',\r\n      backgroundColor: '#ffffff' \r\n      //flexGrow: 1\r\n    },\r\n    imgStyle : {\r\n        width: 50,\r\n        height: 30,\r\n    },\r\n    headerText: {\r\n        fontSize: 25,\r\n        fontWeight: 'bold'\r\n    },\r\n    subHeaderText: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold'\r\n    },\r\n    smallText: {\r\n        fontSize: 10,\r\n        fontWeight: 'normal'\r\n    },\r\n    smallLeftText: {\r\n        fontSize: 10,\r\n        fontWeight: 'normal',\r\n        textAlign : 'left'\r\n    },\r\n    smallRightText: {\r\n        fontSize: 10,\r\n        fontWeight: 'normal',\r\n        textAlign : 'right'\r\n    },\r\n    normalLeftText: {\r\n        fontSize: 15,\r\n        fontWeight: 'normal',\r\n        textAlign : 'left'\r\n    },\r\n  });\r\nexport default memo(function DonationReceipt(props) {\r\n    const [crestAddress] = useState('Flat# B601, Golok Vrindavan, Tilekar Nagar, Behind ISKCON Temple, Kondhwa Pune - 48');\r\n    const [scssAddress] = useState('4, Tarapore Road, Camp, Pune - 01');\r\n    const [crestReg] = useState('MH.894/2015/PUNE');\r\n    const [scsstReg] = useState('MH.894/2015/PUNE');\r\n    const [crestPAN] = useState('AABTC8218M');\r\n    const [scssPAN] = useState('AAKTS9670C');\r\n    const [donationDate, setDonationDate] = useState('');\r\n    const [donationAmountInWord, setDonationAmountInWord] = useState('');\r\n    const [donationBankRefDate, setDonationBankRefDate] = useState('');\r\n\r\n    const getMonthInWord = (iMonth) => {\r\n        switch (iMonth) {\r\n            case 0: return 'January';\r\n            case 1: return 'February';\r\n            case 2: return 'March';\r\n            case 3: return 'April';    \r\n            case 4: return 'May';\r\n            case 5: return 'June';\r\n            case 6: return 'July';\r\n            case 7: return 'August';\r\n            case 8: return 'September';\r\n            case 9: return 'October';\r\n            case 10: return 'November';\r\n            case 11: return 'December';\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        //Get donation date as string\r\n        const dDate = new Date(props.donation.date);\r\n\r\n        let sDate = dDate.getDate();\r\n        let sMonth = getMonthInWord(dDate.getMonth());\r\n        let sYear = dDate.getFullYear();\r\n\r\n        setDonationDate('' + sDate + '-' + sMonth + '-' + sYear);\r\n\r\n        //Get Bank ref date as string\r\n        let bankRefDate = props.donation.bankRefDate;\r\n        if(bankRefDate !== '' && bankRefDate !== undefined){\r\n            const dBankRefDate = new Date(bankRefDate);\r\n            sDate = dBankRefDate.getDate();\r\n            sMonth = getMonthInWord(dBankRefDate.getMonth());;\r\n            sYear = dBankRefDate.getFullYear();\r\n\r\n            setDonationBankRefDate('' +  sDate + '-' + sMonth + '-' + sYear);\r\n        }\r\n\r\n        //Get the donation amount wordings\r\n        let num = props.donation.amount;\r\n        var a = ['','One ','Two ','Three ','Four ', 'Five ','Six ','Seven ','Eight ','Nine ','Ten ','Eleven ','Twelve ','Thirteen ','Fourteen ','Fifteen ','Sixteen ','Seventeen ','Eighteen ','Nineteen '];\r\n        var b = ['', '', 'Twenty','Thirty','Forty','Fifty', 'Sixty','Seventy','Eighty','Ninety'];\r\n        if ((num = num.toString()).length > 9) return 'overflow';\r\n          let n = ('000000000' + num).substr(-9).match(/^(\\d{2})(\\d{2})(\\d{2})(\\d{1})(\\d{2})$/);\r\n          if (!n) return; var str = '';\r\n          str += (n[1] != 0) ? (a[Number(n[1])] || b[n[1][0]] + ' ' + a[n[1][1]]) + 'Crore ' : '';\r\n          str += (n[2] != 0) ? (a[Number(n[2])] || b[n[2][0]] + ' ' + a[n[2][1]]) + 'Lakh ' : '';\r\n          str += (n[3] != 0) ? (a[Number(n[3])] || b[n[3][0]] + ' ' + a[n[3][1]]) + 'Thousand ' : '';\r\n          str += (n[4] != 0) ? (a[Number(n[4])] || b[n[4][0]] + ' ' + a[n[4][1]]) + 'Hundred ' : '';\r\n          str += (n[5] != 0) ? ((str != '') ? 'and ' : '') + (a[Number(n[5])] || b[n[5][0]] + ' ' + a[n[5][1]]) + '' : '';\r\n          setDonationAmountInWord( str + \"only\");\r\n    }, [])\r\n\r\n    return (\r\n        <Document>\r\n            <Page size=\"A4\" style={styles.page}>\r\n            \r\n            <View style={styles.section}>\r\n                <View style={{alignContent: 'flex-start'}}>\r\n                    {/* <Image src=\"../public/img/BMS Logo.jpg\" /> */}\r\n                    <Image src={logo} alt='BMS Logo'style={styles.imgStyle}/>\r\n                    <Text style={styles.headerText}>{props.donation.trust === 'CREST' ? `Chaitnaya Research & Educational Services Trust` :\r\n                'Sri Chaitanya Shikshan Santha'}</Text>\r\n                    <View>\r\n                        <Text style={styles.smallText}>{props.donation.trust === 'CREST' ? crestAddress : scssAddress}</Text>\r\n                        <Text style={styles.smallText}>Registered under MH act {props.donation.trust === 'CREST' ? crestReg : scsstReg}</Text>\r\n                        <Text style={styles.smallText}>Trust PAN: {props.donation.trust === 'CREST' ? crestPAN : scssPAN}</Text>\r\n                        <Text style={styles.subHeaderText}>RECEIPT</Text>\r\n                        <Text style={styles.smallLeftText}>No: {props.donation.id}</Text>\r\n                        <Text style={styles.smallRightText }>Date: {donationDate}</Text>\r\n                        <Text>\r\n                            Receive with thanks, a sum of Rupees {donationAmountInWord} through {props.donation.mode} {props.donation.mode === 'Cash' ? '' : `with ${props.donation.mode} No: ${props.donation.bankRef} dated ${donationBankRefDate}`} from {props.donor.fullName}\r\n                        </Text>\r\n                        <Text style={styles.normalLeftText }>PAN: {props.donor.pan}</Text>\r\n                        {!!props.donor.phone && <Text style={styles.normalLeftText }>Phone: {props.donor.phone}</Text>}\r\n                        {!!props.donor.email && <Text style={styles.normalLeftText }>Email: {props.donor.email}</Text>}\r\n                        <Text style={styles.normalLeftText }>Address: {props.donor.address.addressLine1}</Text>\r\n                        <Text style={styles.normalLeftText }>{props.donor.address.addressLine2}</Text>\r\n                        <Text style={styles.normalLeftText }>{props.donor.address.city} {props.donor.address.pin}</Text>\r\n                        <Text style={styles.normalLeftText }>{props.donor.address.state} {props.donor.address.country}</Text>\r\n                        <Text>{' '}</Text>\r\n                        <Text style={styles.normalLeftText }> Rs: {props.donation.amount}/-</Text>\r\n                        <Text style={styles.smallRightText }>{'-------------------------------'}</Text>\r\n                        <Text style={styles.smallRightText }>For {props.donation.trust === 'CREST' ? 'Chaitnaya Research & Educational Services Trust' :\r\n                'Sri Chaitanya Shikshan Santha'}</Text>\r\n                    </View>\r\n                </View>\r\n                \r\n            </View>\r\n            <View style={styles.section}>\r\n                <View style={{alignContent: 'flex-start'}}>\r\n                    {/* <Image src=\"../public/img/BMS Logo.jpg\" /> */}\r\n                    <Image src={logo} alt='BMS Logo'style={styles.imgStyle}/>\r\n                    <Text style={styles.headerText}>{props.donation.trust === 'CREST' ? `Chaitnaya Research & Educational Services Trust` :\r\n                'Sri Chaitanya Shikshan Santha'}</Text>\r\n                    <View>\r\n                        <Text style={styles.smallText}>{props.donation.trust === 'CREST' ? crestAddress : scssAddress}</Text>\r\n                        <Text style={styles.smallText}>Registered under MH act {props.donation.trust === 'CREST' ? crestReg : scsstReg}</Text>\r\n                        <Text style={styles.smallText}>Trust PAN: {props.donation.trust === 'CREST' ? crestPAN : scssPAN}</Text>\r\n                        <Text style={styles.subHeaderText}>RECEIPT</Text>\r\n                        <Text style={styles.smallLeftText}>No: {props.donation.id}</Text>\r\n                        <Text style={styles.smallRightText }>Date: {donationDate}</Text>\r\n                        <Text>\r\n                            Receive with thanks, a sum of Rupees {donationAmountInWord} through {props.donation.mode} {props.donation.mode === 'Cash' ? '' : `with ${props.donation.mode} No: ${props.donation.bankRef} dated ${donationBankRefDate}`} from {props.donor.fullName}\r\n                        </Text>\r\n                        <Text style={styles.normalLeftText }>PAN: {props.donor.pan}</Text>\r\n                        {!!props.donor.phone && <Text style={styles.normalLeftText }>Phone: {props.donor.phone}</Text>}\r\n                        {!!props.donor.email && <Text style={styles.normalLeftText }>Email: {props.donor.email}</Text>}\r\n                        <Text style={styles.normalLeftText }>Address: {props.donor.address.addressLine1}</Text>\r\n                        <Text style={styles.normalLeftText }>{props.donor.address.addressLine2}</Text>\r\n                        <Text style={styles.normalLeftText }>{props.donor.address.city} {props.donor.address.pin}</Text>\r\n                        <Text style={styles.normalLeftText }>{props.donor.address.state} {props.donor.address.country}</Text>\r\n                        <Text>{' '}</Text>\r\n                        <Text style={styles.normalLeftText }> Rs: {props.donation.amount}/-</Text>\r\n                        <Text style={styles.smallRightText }>{'-------------------------------'}</Text>\r\n                        <Text style={styles.smallRightText }>For {props.donation.trust === 'CREST' ? 'Chaitnaya Research & Educational Services Trust' :\r\n                'Sri Chaitanya Shikshan Santha'}</Text>\r\n                    </View>\r\n                </View>\r\n                \r\n            </View>\r\n            </Page>\r\n        </Document>\r\n    )\r\n})\r\n","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\MyDialog.jsx",[],["153","154"],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":42,"column":7,"nodeType":"161","endLine":42,"endColumn":13,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":3,"column":8,"nodeType":"165","messageId":"166","endLine":3,"endColumn":12},{"ruleId":"167","severity":1,"message":"168","line":57,"column":33,"nodeType":"169","endLine":57,"endColumn":124},{"ruleId":"163","severity":1,"message":"170","line":5,"column":10,"nodeType":"165","messageId":"166","endLine":5,"endColumn":19},{"ruleId":"163","severity":1,"message":"171","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":16},{"ruleId":"163","severity":1,"message":"172","line":24,"column":19,"nodeType":"165","messageId":"166","endLine":24,"endColumn":25},{"ruleId":"163","severity":1,"message":"173","line":1,"column":9,"nodeType":"165","messageId":"166","endLine":1,"endColumn":15},{"ruleId":"174","severity":1,"message":"175","line":18,"column":6,"nodeType":"176","endLine":18,"endColumn":16},{"ruleId":"163","severity":1,"message":"177","line":7,"column":23,"nodeType":"165","messageId":"166","endLine":7,"endColumn":35},{"ruleId":"163","severity":1,"message":"178","line":24,"column":28,"nodeType":"165","messageId":"166","endLine":24,"endColumn":36},{"ruleId":"163","severity":1,"message":"179","line":6,"column":10,"nodeType":"165","messageId":"166","endLine":6,"endColumn":20},{"ruleId":"163","severity":1,"message":"180","line":7,"column":8,"nodeType":"165","messageId":"166","endLine":7,"endColumn":25},{"ruleId":"159","severity":1,"message":"181","line":36,"column":13,"nodeType":"182","endLine":189,"endColumn":4},{"ruleId":"183","severity":1,"message":"184","line":143,"column":38,"nodeType":"182","messageId":"185","endLine":143,"endColumn":40},{"ruleId":"163","severity":1,"message":"186","line":147,"column":15,"nodeType":"165","messageId":"166","endLine":147,"endColumn":26},{"ruleId":"183","severity":1,"message":"184","line":179,"column":40,"nodeType":"182","messageId":"185","endLine":179,"endColumn":42},{"ruleId":"159","severity":1,"message":"187","line":189,"column":6,"nodeType":"161","endLine":189,"endColumn":8,"suggestions":"188"},{"ruleId":"163","severity":1,"message":"189","line":4,"column":3,"nodeType":"165","messageId":"166","endLine":4,"endColumn":12},{"ruleId":"163","severity":1,"message":"190","line":6,"column":3,"nodeType":"165","messageId":"166","endLine":6,"endColumn":11},{"ruleId":"163","severity":1,"message":"191","line":7,"column":3,"nodeType":"165","messageId":"166","endLine":7,"endColumn":7},{"ruleId":"163","severity":1,"message":"192","line":8,"column":3,"nodeType":"165","messageId":"166","endLine":8,"endColumn":11},{"ruleId":"193","severity":1,"message":"194","line":21,"column":23,"nodeType":"195","messageId":"196","endLine":21,"endColumn":25},{"ruleId":"193","severity":1,"message":"194","line":29,"column":37,"nodeType":"195","messageId":"196","endLine":29,"endColumn":39},{"ruleId":"159","severity":1,"message":"181","line":7,"column":15,"nodeType":"182","endLine":19,"endColumn":6},{"ruleId":"159","severity":1,"message":"197","line":19,"column":8,"nodeType":"161","endLine":19,"endColumn":10,"suggestions":"198"},{"ruleId":"163","severity":1,"message":"199","line":3,"column":10,"nodeType":"165","messageId":"166","endLine":3,"endColumn":18},{"ruleId":"163","severity":1,"message":"200","line":11,"column":9,"nodeType":"165","messageId":"166","endLine":11,"endColumn":19},{"ruleId":"163","severity":1,"message":"178","line":52,"column":11,"nodeType":"165","messageId":"166","endLine":52,"endColumn":19},{"ruleId":"159","severity":1,"message":"201","line":139,"column":6,"nodeType":"161","endLine":139,"endColumn":8,"suggestions":"202"},{"ruleId":"163","severity":1,"message":"179","line":4,"column":10,"nodeType":"165","messageId":"166","endLine":4,"endColumn":20},{"ruleId":"163","severity":1,"message":"170","line":5,"column":10,"nodeType":"165","messageId":"166","endLine":5,"endColumn":19},{"ruleId":"193","severity":1,"message":"203","line":115,"column":24,"nodeType":"195","messageId":"196","endLine":115,"endColumn":26},{"ruleId":"193","severity":1,"message":"203","line":116,"column":24,"nodeType":"195","messageId":"196","endLine":116,"endColumn":26},{"ruleId":"193","severity":1,"message":"203","line":117,"column":24,"nodeType":"195","messageId":"196","endLine":117,"endColumn":26},{"ruleId":"193","severity":1,"message":"203","line":118,"column":24,"nodeType":"195","messageId":"196","endLine":118,"endColumn":26},{"ruleId":"193","severity":1,"message":"203","line":119,"column":24,"nodeType":"195","messageId":"196","endLine":119,"endColumn":26},{"ruleId":"193","severity":1,"message":"203","line":119,"column":38,"nodeType":"195","messageId":"196","endLine":119,"endColumn":40},{"ruleId":"159","severity":1,"message":"204","line":121,"column":8,"nodeType":"161","endLine":121,"endColumn":10,"suggestions":"205"},{"ruleId":"155","replacedBy":"206"},{"ruleId":"157","replacedBy":"207"},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["210"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'firestore' is defined but never used.","'firebase' is defined but never used.","'docRef' is assigned a value but never used.","'Navbar' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'setDonorName' is assigned a value but never used.","'snapshot' is assigned a value but never used.","'useSession' is defined but never used.","'CommitmentDetails' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'bankRefDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'params.donorId' and 'setValue'. Either include them or remove the dependency array.",["211"],"'PDFViewer' is defined but never used.","'Document' is defined but never used.","'Page' is defined but never used.","'ReactPDF' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'props.refId'. Either include it or remove the dependency array.",["212"],"'Redirect' is defined but never used.","'privilages' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'params.donorId', 'params.type', and 'setValue'. Either include them or remove the dependency array.",["213"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'props.donation.amount', 'props.donation.bankRefDate', and 'props.donation.date'. Either include them or remove the dependency array.",["214"],["208"],["209"],"no-global-assign","no-unsafe-negation",{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},"Update the dependencies array to be: [props.history, user]",{"range":"225","text":"226"},"Update the dependencies array to be: [params.donorId, setValue]",{"range":"227","text":"228"},"Update the dependencies array to be: [props.refId]",{"range":"229","text":"230"},"Update the dependencies array to be: [params.donorId, params.type, setValue]",{"range":"231","text":"232"},"Update the dependencies array to be: [props.donation.amount, props.donation.bankRefDate, props.donation.date]",{"range":"233","text":"234"},[1446,1452],"[props.history, user]",[6503,6505],"[params.donorId, setValue]",[771,773],"[props.refId]",[4972,4974],"[params.donorId, params.type, setValue]",[4622,4624],"[props.donation.amount, props.donation.bankRefDate, props.donation.date]"]