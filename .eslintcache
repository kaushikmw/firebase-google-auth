[{"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\index.js":"1","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\reportWebVitals.js":"2","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\App.js":"3","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\Login.jsx":"4","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\Home.jsx":"5","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\Header.jsx":"6","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\firebase\\config.jsx":"7","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\firebase\\Auth.jsx":"8","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\firebase\\UserProvider.jsx":"9","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\route\\PageRoute.jsx":"10","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\Default.jsx":"11","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\TestPage.jsx":"12","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\firebase\\Users.jsx":"13","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\firebase\\UserPrivilageProvider.jsx":"14","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\route\\PrivateDMSRoute.jsx":"15","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\SideNavPage.jsx":"16","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\SearchDonor.jsx":"17","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\DonorList.jsx":"18","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\DonorDetails.jsx":"19","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\DonationDetails.jsx":"20","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\CommitmentDetails.jsx":"21","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\GetReferenceDetails.jsx":"22","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\AcceptDonation.jsx":"23","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\DonationReceipt.jsx":"24","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\MyDialog.jsx":"25","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\Sidebar.jsx":"26","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\AddANewDonor.jsx":"27","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\SidebarData.jsx":"28"},{"size":585,"mtime":1611929876453,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":2394,"mtime":1613979781862,"results":"32","hashOfConfig":"30"},{"size":2491,"mtime":1610777890916,"results":"33","hashOfConfig":"30"},{"size":1277,"mtime":1612343551686,"results":"34","hashOfConfig":"30"},{"size":5930,"mtime":1613977418959,"results":"35","hashOfConfig":"30"},{"size":558,"mtime":1613028265523,"results":"36","hashOfConfig":"30"},{"size":688,"mtime":1610635832516,"results":"37","hashOfConfig":"30"},{"size":1103,"mtime":1614001529936,"results":"38","hashOfConfig":"30"},{"size":753,"mtime":1613712169427,"results":"39","hashOfConfig":"30"},{"size":269,"mtime":1610710735255,"results":"40","hashOfConfig":"30"},{"size":902,"mtime":1610816476235,"results":"41","hashOfConfig":"30"},{"size":890,"mtime":1612962715914,"results":"42","hashOfConfig":"30"},{"size":2072,"mtime":1611244727741,"results":"43","hashOfConfig":"30"},{"size":781,"mtime":1613982252894,"results":"44","hashOfConfig":"30"},{"size":1147,"mtime":1610884364836,"results":"45","hashOfConfig":"30"},{"size":2928,"mtime":1613979495598,"results":"46","hashOfConfig":"30"},{"size":831,"mtime":1611228417998,"results":"47","hashOfConfig":"30"},{"size":17714,"mtime":1613735233056,"results":"48","hashOfConfig":"30"},{"size":11021,"mtime":1612870815290,"results":"49","hashOfConfig":"30"},{"size":478,"mtime":1611229301432,"results":"50","hashOfConfig":"30"},{"size":878,"mtime":1611242319622,"results":"51","hashOfConfig":"30"},{"size":26117,"mtime":1612867257628,"results":"52","hashOfConfig":"30"},{"size":10444,"mtime":1612414324187,"results":"53","hashOfConfig":"30"},{"size":1304,"mtime":1612632075347,"results":"54","hashOfConfig":"30"},{"size":5979,"mtime":1613979622473,"results":"55","hashOfConfig":"30"},{"size":6570,"mtime":1614015317914,"results":"56","hashOfConfig":"30"},{"size":476,"mtime":1613040889127,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"147kphg",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"60"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"60"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"60"},"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\index.js",[],["131","132"],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\reportWebVitals.js",[],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\App.js",[],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\Login.jsx",["133"],"import React, { memo,  useState, useEffect} from 'react'\r\n// import { signupWithGoogle } from '../firebase/Auth';\r\nimport firebase from \"../firebase/config\";\r\nimport 'firebase/auth';\r\nimport { useSession } from '../firebase/UserProvider';\r\nimport { createUserDocument } from '../firebase/Users';\r\n\r\n\r\nexport default memo(function Login(props) {\r\n\r\n    const [invalidEmail, setInvalidEmail] = useState(false);\r\n    const {user} = useSession();\r\n\r\n\r\n   const signIn = () => {\r\n       const provider = new firebase.auth.GoogleAuthProvider();\r\n    //    provider.setCustomParameters({hd: 'bmspune.org',prompt: 'select_account'});\r\n        provider.setCustomParameters({hd: 'bmspune.org'});\r\n    //    const signInResult = signupWithGoogle();\r\n         firebase.auth().signInWithPopup(provider).then(async (result) => {\r\n            var loggedInUser = result.user;\r\n            console.log(\"user email\");console.log(user);\r\n            const userEmail = loggedInUser.email;\r\n            if(userEmail.split('@')[1] !== 'bmspune.org') {\r\n                setInvalidEmail(true);\r\n                loggedInUser.delete();\r\n            }else{\r\n                createUserDocument(loggedInUser);\r\n                props.history.push(\"/home\");\r\n            } \r\n            \r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n       \r\n   }\r\n\r\n   useEffect(() => {\r\n       if(user){\r\n        props.history.push(\"/home\");\r\n       }\r\n   }, [user])\r\n    return (\r\n    <>\r\n                <div id=\"login\">\r\n                <h2 className=\"text-center text-blue pt-5\">Welcome to BMS Intranet</h2>\r\n            \r\n                <div id=\"login-row\" className=\"row justify-content-center d-flex\">\r\n                        {\r\n                        !user ? (\r\n                            <div id=\"login-box\" className=\"col-md-12 justify-content-center d-flex\">\r\n                            <div><button className=\"btn btn-primary text-center\"\r\n                            onClick={signIn}>Sign in with bmspune.org account</button></div>\r\n                        </div>)\r\n                         :\r\n                        (\r\n                            <div>You have already logged in as {user.displayName} with email as {user.email}</div>\r\n                        )\r\n                        }\r\n                        \r\n                        {(invalidEmail) && <div>The email id is not allowed</div>}\r\n                </div>\r\n            \r\n        </div>\r\n        \r\n    </>\r\n    );\r\n})\r\n","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\Home.jsx",["134"],"import React, { memo } from 'react'\r\nimport { useSession } from '../firebase/UserProvider';\r\nimport logo from '../img/BMSLogo.jpg';\r\nexport default memo(function Home() {\r\n\r\n    const {user} = useSession();\r\n    \r\n    return (\r\n        <div>\r\n            <div id=\"home\">\r\n            <h2 className=\"text-center text-blue pt-5\">Welcome Home!</h2>\r\n            <div className=\"container\">\r\n                <div id=\"login-row\" className=\"row justify-content-center align-items-center\">\r\n                    <div id=\"login-column\" className=\"col-md-6\">\r\n                        <div id=\"login-box\" className=\"col-md-12 justify-content-center d-flex\">\r\n                            {!!user && <div> Welcome {user.displayName}</div>}\r\n                        </div>\r\n                        <div className=\"justify-content-center d-flex\">\r\n                                {!!user && <div><img src={user.photoURL} alt=\"Profile\" className=\"rounded-circle img-thumbnail img-fluid\"/>\r\n                                 {/* <img src={logo} alt='BMS Logo' /> */}\r\n                                 </div>\r\n                                }\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n})\r\n","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\Header.jsx",["135","136","137","138","139","140","141","142","143"],"import React, { memo } from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport firebase from \"../firebase/config\";\r\nimport { GetUserPrivilages } from \"../firebase/UserPrivilageProvider\";\r\nimport { useSession } from \"../firebase/UserProvider\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport { SidebarData } from \"./SidebarData\";\r\nimport \"../styles/Sidebar.css\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\n// import {resetPrivilages} from '../firebase/UserProvider';\r\nexport default memo(function Header(props) {\r\n  const [menu, setMenu] = useState(false);\r\n  const history = useHistory();\r\n  const [profileNavMenuDropdown, setProfileMenuDropdown] = useState(false);\r\n  //   const toggleMenu = () => {\r\n  //     setMenu(!menu);\r\n  //   };\r\n\r\n  const { user } = useSession();\r\n\r\n  const privilages = GetUserPrivilages();\r\n\r\n  const signOutUser = () => {\r\n    firebase.auth().signOut();\r\n    setProfileMenuDropdown(false);\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const toggleProfileNavMenuDropdown = () => {\r\n    setProfileMenuDropdown(!profileNavMenuDropdown);\r\n  };\r\n\r\n  //   const toggleDonorNavMenuDropdown = () => {\r\n  //     setDonorNavMenuDropdown(!donorNavMenuDropdown);\r\n  //   };\r\n  const showMenu = `collapse navbar-collapse ml-5 ${menu ? \"show\" : \"\"}`;\r\n\r\n  useEffect(() => {\r\n    if (profileNavMenuDropdown) {\r\n      setProfileMenuDropdown(false);\r\n    }\r\n    return () => {\r\n      if (profileNavMenuDropdown) {\r\n        setProfileMenuDropdown(false);\r\n      }\r\n    };\r\n  }, []);\r\n  return (\r\n    // <div>\r\n    //     <nav className=\"navbar navbar-expand-md bg-white navbar-dark\">\r\n    //         <div><Link to=\"/login\">Logo</Link></div>\r\n    //         <button className=\"navbar-toggler\" type=\"button\" onClick={toggleMenu}>\r\n    //             <span className=\"navbar-toggler-icon\"></span>\r\n    //         </button>\r\n    //         <div className={showMenu} id=\"collapsibleNavbar\">\r\n    //             <div className=\"row w-100\">\r\n    //                 <div className=\"col-3\">\r\n    //                     {!!user &&\r\n    //                         <ul className=\"navbar-nav \">\r\n    //                             <li className=\"nav-item\">\r\n    //                                 <Link className=\"nav-link text-dark\" to=\"/home\">Home</Link>\r\n    //                             </li>\r\n    //                             {\r\n    //                                 privilages.canAccessDMS &&\r\n    //                                 <li className=\"nav-item\">\r\n    //                                     <Link className=\"nav-link  text-dark\" to=\"/donorsearch\">Donor Management System</Link>\r\n    //                                 </li>\r\n    //                             }\r\n\r\n    //                             <li className=\"nav-item\">\r\n    //                             <Link className=\"nav-link  text-dark\" to=\"/donordetails/4OkDMxz6QjYNgPF710jE\">Donor Details</Link>\r\n    //                             </li>\r\n    //                         </ul>\r\n    //                 }\r\n    //                 </div>\r\n    //                 <div className=\"col-6 text-center display-1\"><h1>The Title here</h1></div>\r\n\r\n    //                 <div className=\"col-3  text-dark text-right\">\r\n    //                     <button className=\"btn brn-link\">\r\n    //                         <img src={user ? user.photoURL : ''} className=\"rounded-circle\" style={{height: '32px'}} />\r\n    //                     </button>\r\n    //                     <div id=\"profileImageMenu\" className='collapse navbar-collapse'>\r\n\r\n    //                     </div>\r\n    //                     {!!user &&\r\n    //                     <button className=\"btn btn-link  text-dark\" onClick = {signOutUser} >Logout</button>}\r\n    //                     </div>\r\n    //             </div>\r\n\r\n    //         </div>\r\n    //     </nav>\r\n    // </div>\r\n    <>\r\n      <nav className=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow row\">\r\n        <div className=\"col-md-3 col-sm-3\">\r\n          <Link className=\"navbar-brand mr-0 px-3\" to=\"\\\">\r\n            LOGO\r\n          </Link>\r\n        </div>\r\n        <div className=\"col-md-6 col-sm-6\">\r\n          <div>\r\n            <h1 class=\"w-100 text-white text-center\">\r\n              {process.env.REACT_APP_APP_TITLE}\r\n            </h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3 col-sm-3\">\r\n          {user && (\r\n            <div\r\n              className={`float-right ${profileNavMenuDropdown ? \"show\" : \"\"}`}\r\n            >\r\n              <button\r\n                className=\"btn brn-link pr-3 dropdown-toggle\"\r\n                type=\"button\"\r\n                onClick={toggleProfileNavMenuDropdown}\r\n                aria-expanded={profileNavMenuDropdown}\r\n              >\r\n                <img\r\n                  src={user ? user.photoURL : \"\"}\r\n                  className=\"rounded-circle\"\r\n                  style={{ height: \"32px\" }}\r\n                />\r\n              </button>\r\n\r\n              <div\r\n                className={`bg-dark dropdown-menu dropdown-menu-right ${\r\n                  profileNavMenuDropdown ? \"show\" : \"\"\r\n                }`}\r\n              >\r\n                <ul class=\"navbar-nav\">\r\n                  <li class={`nav-item text-nowrap dropdown-item `}>\r\n                    <button class=\"btn btn-link \" onClick={signOutUser}>\r\n                      Sign out\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* <button\r\n          type=\"button\"\r\n          aria-label=\"Toggle Navigation\"\r\n          className=\"navbar-toggler position-absolute d-md-none collapsed\"\r\n          onClick={toggleNavigation}\r\n        >\r\n          <FaIcons.FaBars onClick={showSidebar} />\r\n        </button> */}\r\n      </nav>\r\n    </>\r\n  );\r\n});\r\n","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\firebase\\config.jsx",[],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\firebase\\Auth.jsx",[],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\firebase\\UserProvider.jsx",["144"],"import React from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport { useState, useContext } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { firestore } from \"./config\";\r\n\r\nexport const UserContext = React.createContext();\r\n\r\nexport const UserProvider = (props) => {\r\n  const [session, setSession] = useState({ user: null, loading: false });\r\n\r\n  useEffect(() => {\r\n    const unsubsribe = firebase\r\n      .auth()\r\n      .onAuthStateChanged(async (loggedInUser) => {\r\n        if (loggedInUser) {\r\n          let userEmail = loggedInUser.email;\r\n          if (userEmail.split(\"@\")[1] === \"bmspune.org\") {\r\n            setSession({ user: loggedInUser, loading: false });\r\n            console.log(\"Session has been set\");\r\n          }\r\n        } else {\r\n          setSession({ user: null, loading: false });\r\n        }\r\n      });\r\n    return () => unsubsribe();\r\n  }, []);\r\n\r\n  return (\r\n    <UserContext.Provider value={session}>\r\n      {!session.loading && props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSession = () => {\r\n  return useContext(UserContext);\r\n};\r\n","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\route\\PageRoute.jsx",[],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\Default.jsx",[],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\TestPage.jsx",[],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\firebase\\Users.jsx",[],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\firebase\\UserPrivilageProvider.jsx",["145","146"],"import React, {  } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport { useState,useContext } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { firestore } from \"./config\";\r\nimport { useSession } from \"./UserProvider\";\r\n\r\nexport const UserPrivilageContext = React.createContext();\r\n\r\nexport const UserPrivilageProvider = (props) => {\r\n\r\n    const [privilages, setPrivilages] = useState({canAccessDMS: false,\r\n                                                canAccessFMS: false,\r\n                                                canCreateDMS: false,\r\n                                                canReadDMS: false,\r\n                                                canUpdateDMS: false,\r\n                                                isAdmin: false,\r\n                                                 language: 'English',\r\n                                                loading: false});\r\n    const {user} = useSession();\r\n    \r\n    useEffect(() => {\r\n        if(user){\r\n            const docRef = firestore.collection(`users`).doc(user.uid)\r\n            .onSnapshot((doc) => {\r\n                console.log('logged in user');\r\n                console.log(doc.data());\r\n                let userData = doc.data();\r\n                setPrivilages({\r\n                    canAccessDMS: userData.dms.canAccess,\r\n                    canAcceptDonation: userData.dms.canAcceptDonation,\r\n                    canUpdateDonor: userData.dms.canUpdateDonor,\r\n                    canCreateDonor: userData.dms.canCreateDonor,\r\n                    canAccessFMS: userData.canAccessFMS,\r\n                    isAdmin: userData.isAdmin,\r\n                    language: userData.language,\r\n                })\r\n            });\r\n        }\r\n    }, [user]);\r\n\r\n    return(\r\n        <UserPrivilageContext.Provider value={privilages}>\r\n            {!privilages.loading && props.children}\r\n        </UserPrivilageContext.Provider>\r\n    );\r\n}\r\n\r\nexport const resetUserPrivilages = () => {\r\n\r\n}\r\nexport const GetUserPrivilages = () => {\r\n    return  useContext(UserPrivilageContext);\r\n}","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\route\\PrivateDMSRoute.jsx",[],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\SideNavPage.jsx",["147","148"],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\SearchDonor.jsx",["149"],"import React, { memo, useState } from \"react\";\r\nimport { firestore } from \"../firebase/config\";\r\nimport DonorList from \"./DonorList\";\r\n// import DonorList from './DonorList';\r\n\r\nexport default memo(function SearchDonor() {\r\n  // const [donorName, setDonorName] = useState(\"\");\r\n  const [pan, setPan] = useState(\"\");\r\n\r\n  const [queryResult, setQueryResult] = useState(null);\r\n  return (\r\n    <div>\r\n      <div className=\"justify-content-center d-flex\">\r\n        <h2>Search Donor</h2>\r\n      </div>\r\n      <div className=\"row justify-content-center d-flex\">\r\n        <form\r\n          className=\"form-inline \"\r\n          onSubmit={async (e) => {\r\n            e.preventDefault();\r\n\r\n            const query = firestore\r\n              .collection(`donors`)\r\n              .where(\"pan\", \">=\", pan);\r\n            const snapshot = await query\r\n              .get({ source: \"server\" })\r\n              .then((QuerySnapshot) => {\r\n                let donorList = [];\r\n                QuerySnapshot.forEach((donor) => {\r\n                  donorList.push({\r\n                    donorId: donor.id,\r\n                    fullName: donor.data().fullName,\r\n                    pan: donor.data().pan,\r\n                  });\r\n                }); //End of QuerySnapshot.forEach\r\n\r\n                setQueryResult(donorList);\r\n              });\r\n          }}\r\n        >\r\n          {/* <label className='ml-2' for=\"donorName\">Donor Name:</label>\r\n                        <input type=\"text\" className=\"form-control m-2\" id=\"donorName\" \r\n                        placeholder=\"Enter donor name here\" name=\"donorName\"\r\n                        onChange={(e) => setDonorName(e.target.value)}/> */}\r\n\r\n          <label className=\"ml-2\">PAN No:</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control m-2\"\r\n            id=\"pan\"\r\n            placeholder=\"Enter PAN\"\r\n            name=\"pan\"\r\n            onChange={(e) => setPan(e.target.value.toUpperCase())}\r\n          />\r\n\r\n          <button type=\"submit\" className=\"btn btn-primary m-2\">\r\n            Search\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <div\r\n        className=\"card border-top-0 rounded-0\"\r\n        style={{ position: \"inherit\" }}\r\n      >\r\n        <div className=\"card-body py-2 justify-content-center d-flex\">\r\n          <div className=\"card-title font-weight-bold m-0\">Result</div>\r\n        </div>\r\n      </div>\r\n      {queryResult != null && (\r\n        <div\r\n          className=\"card border-top-0 rounded-0\"\r\n          style={{ position: \"inherit\" }}\r\n        >\r\n          <div className=\"card-body py-2 justify-content-center d-flex\">\r\n            <div className=\"card-title font-weight-bold m-0\">\r\n              {/* <DonorList queryResult={queryResult} /> */}\r\n              Query Results here..\r\n              <DonorList queryResult={queryResult} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\DonorList.jsx",[],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\DonorDetails.jsx",["150","151","152","153","154","155","156","157","158","159"],"import React, { memo, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { firestore } from \"../firebase/config\";\r\nimport { GetUserPrivilages } from \"../firebase/UserPrivilageProvider\";\r\n// import { useSession } from \"../firebase/UserProvider\";\r\n// import CommitmentDetails from \"./CommitmentDetails\";\r\n\r\nimport DonationDetails from \"./DonationDetails\";\r\nimport GetReferenceDetails from \"./GetReferenceDetails\";\r\n\r\nexport default memo(function DonorDetails(props) {\r\n  const { register, setValue, handleSubmit } = useForm();\r\n\r\n  const [donations, setDonations] = useState(null);\r\n  const [commitments, setCommitments] = useState(null);\r\n  const [donorRef, setDonorRef] = useState(\"\");\r\n  const [donorDetails, setDonorDetails] = useState({\r\n    fullName: \"\",\r\n    pan: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    address: {\r\n      addressLine1: \"\",\r\n      addressLine2: \"\",\r\n      city: \"\",\r\n      pin: \"\",\r\n      state: \"\",\r\n      country: \"\",\r\n    },\r\n  });\r\n  const [areThereDonations, thereAreDonations] = useState(false);\r\n  const [areThereCommitments, thereAreCommitments] = useState(false);\r\n\r\n  const updateCommitmentDisplayStatus = () => {\r\n    thereAreCommitments(true);\r\n  };\r\n\r\n  const privilages = GetUserPrivilages();\r\n  const params = useParams();\r\n\r\n  useEffect(async () => {\r\n    const donorId = params.donorId;\r\n    // console.log(`dnorId: ${donorId}`);\r\n    const docRef = firestore.collection(\"donors\").doc(donorId);\r\n    docRef.onSnapshot((snapshot) => {\r\n      if (snapshot.exists) {\r\n        const data = snapshot.data();\r\n        // console.log(\"donor data:\");\r\n        // console.log(data);\r\n        setDonorRef(\r\n          data.reference !== \"\" || data.reference !== undefined\r\n            ? data.reference\r\n            : \"\"\r\n        );\r\n        setValue(\"fullName\", data.fullName);\r\n        setValue(\"pan\", data.pan);\r\n        setValue(\"spiritualName\", data.spiritualName);\r\n\r\n        setValue(\"dob\", data.dob !== undefined ? data.dob.toDate() : \"\");\r\n        setValue(\"email\", data.email);\r\n        setValue(\"phone\", data.phone);\r\n\r\n        setValue(\r\n          \"addressLine1\",\r\n          data.address !== \"\" && data.address !== undefined\r\n            ? data.address.addressLine1\r\n            : \"\"\r\n        );\r\n        setValue(\r\n          \"addressLine2\",\r\n          data.address !== \"\" && data.address !== undefined\r\n            ? data.address.addressLine2\r\n            : \"\"\r\n        );\r\n        setValue(\r\n          \"city\",\r\n          data.address !== \"\" && data.address !== undefined\r\n            ? data.address.city\r\n            : \"\"\r\n        );\r\n        setValue(\r\n          \"pin\",\r\n          data.address !== \"\" && data.address !== undefined\r\n            ? data.address.pin\r\n            : \"\"\r\n        );\r\n\r\n        setValue(\r\n          \"state\",\r\n          data.address !== \"\" && data.address !== undefined\r\n            ? data.address.state\r\n            : \"\"\r\n        );\r\n        setValue(\r\n          \"country\",\r\n          data.address !== \"\" && data.address !== undefined\r\n            ? data.address.country\r\n            : \"\"\r\n        );\r\n        setValue(\"totalDonation\", data.totalDonation);\r\n        setValue(\"totalCommitment\", data.totalCommitment);\r\n\r\n        setValue(\"totalCollection\", data.totalCollection);\r\n        setValue(\"reference\", data.reference);\r\n        setValue(\"totalCommitmentCollection\", data.totalCommitmentCollection);\r\n        //Update Donor Details in the context provider\r\n        setDonorDetails({\r\n          id: donorId,\r\n          fullName: data.fullName,\r\n          pan: data.pan,\r\n          email: data.email,\r\n          phone: data.phone,\r\n          address: {\r\n            addressLine1:\r\n              data.address !== \"\" && data.address !== undefined\r\n                ? data.address.addressLine1\r\n                : \"\",\r\n            addressLine2:\r\n              data.address !== \"\" && data.address !== undefined\r\n                ? data.address.addressLine2\r\n                : \"\",\r\n            city:\r\n              data.address !== \"\" && data.address !== undefined\r\n                ? data.address.city\r\n                : \"\",\r\n            pin:\r\n              data.address !== \"\" && data.address !== undefined\r\n                ? data.address.pin\r\n                : \"\",\r\n            state:\r\n              data.address !== \"\" && data.address !== undefined\r\n                ? data.address.state\r\n                : \"\",\r\n            country:\r\n              data.address !== \"\" && data.address !== undefined\r\n                ? data.address.country\r\n                : \"\",\r\n          },\r\n          totalCollection: data.totalCollection,\r\n          totalCommitment: data.totalCommitment,\r\n          totalCommitmentCollection: data.totalCommitmentCollection,\r\n          totalDonation: data.totalDonation,\r\n        });\r\n      } //End of if(snapshot.exists)\r\n    }); //End of const docRef ...\r\n\r\n    //Get donations\r\n    await docRef\r\n      .collection(\"donations\")\r\n      .orderBy(\"date\")\r\n      .onSnapshot((snapshot) => {\r\n        //   console.log(snapshot.empty);\r\n        if (!snapshot.empty) {\r\n          // console.log(snapshot.docs);\r\n          let donationDataArray = [];\r\n          snapshot.docs.map((donation) => {\r\n            //   console.log(donation.id);\r\n\r\n            const donationData = donation.data();\r\n            //Check the type of donation and set the type accordingly\r\n            // donationData.type === \"Donation\"\r\n            //   ? thereAreDonations(true)\r\n            //   : thereAreCommitments(true);\r\n            let bankRefDate = new Date(\r\n              donationData.bankRefDate * 1000\r\n            ).toString();\r\n            // console.log(donationData.bankRefDate.toDate());\r\n            donationDataArray.push({\r\n              id: donation.id,\r\n              amount: donationData.amount,\r\n              bank: donationData.bank,\r\n              bankRef: donationData.bankRef,\r\n              bankRefDate:\r\n                donationData.bankRefDate !== \"\" &&\r\n                donationData.bankRefDate !== undefined\r\n                  ? donationData.bankRefDate.toDate().toString()\r\n                  : \"\",\r\n              collectedBy: donationData.collectedBy,\r\n              date:\r\n                donationData.date !== \"\" && donationData.date !== undefined\r\n                  ? donationData.date.toDate().toString()\r\n                  : \"\",\r\n              trust: donationData.trust,\r\n              mode: donationData.mode,\r\n              type: donationData.type,\r\n            }); //End of donationDataArray.push\r\n          }); //End of snapshot.docs.map\r\n          setDonations(donationDataArray);\r\n        }\r\n      }); //end of await docRef.collection('donations').onSnapshot(snapshot => {\r\n  }, []);\r\n\r\n  const updateDonorDetails = async (donorData) => {\r\n    console.log(\"Data for update\");\r\n    console.log(donorData);\r\n\r\n    await firestore\r\n      .collection(\"donors\")\r\n      .doc(params.donorId)\r\n      .update({\r\n        fullName: donorData.fullName.toUpperCase(),\r\n        spiritualName: donorData.spiritualName.toUpperCase(),\r\n        email: donorData.email.toUpperCase(),\r\n        phone: donorData.phone,\r\n        address: {\r\n          addressLine1: donorData.addressLine1.toUpperCase(),\r\n          addressLine2: donorData.addressLine2.toUpperCase(),\r\n          city: donorData.city.toUpperCase(),\r\n          pin: donorData.pin,\r\n          state: donorData.state.toUpperCase(),\r\n          country: donorData.country.toUpperCase(),\r\n        },\r\n      })\r\n      .then(() => {\r\n        console.log(\"Update Success\");\r\n        alert(\"Update successful\");\r\n      }); //End of update\r\n  };\r\n  return (\r\n    <div style={{ position: \"inherit\" }}>\r\n      <div className=\"card\">\r\n        <div className=\"justify-content-center d-flex\">\r\n          <h2>Donor Details</h2>\r\n        </div>\r\n        <form className=\"\" onSubmit={handleSubmit(updateDonorDetails)}>\r\n          <label className=\"d-flex\">\r\n            <h4 className=\"p-2\">Personal Details:</h4>\r\n          </label>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <label className=\"m-2\">Donor Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control p-2\"\r\n                id=\"fullName\"\r\n                name=\"fullName\"\r\n                ref={register()}\r\n                {...(privilages.canUpdateDonor ? \"\" : \"readOnly\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <label className=\"m-2\">PAN:</label>\r\n              <input\r\n                type=\"input\"\r\n                className=\"form-control p-2\"\r\n                readOnly\r\n                name=\"pan\"\r\n                ref={register()}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-md-6\">\r\n              <label className=\"m-2\">Spiritual Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control p-2\"\r\n                id=\"dob\"\r\n                name=\"spiritualName\"\r\n                ref={register()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <label className=\"m-2\">Date of Birth:</label>\r\n              <input\r\n                type=\"date-time\"\r\n                className=\"form-control p-2\"\r\n                readOnly\r\n                name=\"dob\"\r\n                ref={register()}\r\n              />\r\n            </div>\r\n          </div>\r\n          <label className=\"d-flex\">\r\n            <h4 className=\"p-2\">Communication Details:</h4>\r\n          </label>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-md-6\">\r\n              <label className=\"m-2\">Email:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control p-2\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                ref={register()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <label className=\"m-2\">Phone:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control p-2\"\r\n                name=\"phone\"\r\n                ref={register()}\r\n              />\r\n            </div>\r\n          </div>\r\n          <label className=\"d-flex\">\r\n            <h4 className=\"p-2\">Address:</h4>\r\n          </label>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-md-6\">\r\n              <label className=\"m-2\">Address Line1:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control p-2\"\r\n                id=\"addressLine1\"\r\n                name=\"addressLine1\"\r\n                ref={register()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <label className=\"m-2\">Address Line2:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control p-2\"\r\n                name=\"addressLine2\"\r\n                ref={register()}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-md-6\">\r\n              <label className=\"m-2\">City:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control p-2\"\r\n                id=\"city\"\r\n                name=\"city\"\r\n                ref={register()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <label className=\"m-2\">Pin Code:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control p-2\"\r\n                name=\"pin\"\r\n                ref={register()}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-md-6\">\r\n              <label className=\"m-2\">State:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control p-2\"\r\n                id=\"state\"\r\n                name=\"state\"\r\n                ref={register()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <label className=\"m-2\">Country:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control p-2\"\r\n                name=\"country\"\r\n                ref={register()}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <label className=\"d-flex\">\r\n            <h4 className=\"p-2\">Total Donations:</h4>\r\n          </label>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-md-6\">\r\n              <label className=\"m-2\">Total Individual Donation:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control p-2\"\r\n                id=\"totalDonation\"\r\n                name=\"totalDonation\"\r\n                readOnly\r\n                ref={register()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <label className=\"m-2\">Total Individual Commitment:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control p-2\"\r\n                readOnly\r\n                name=\"totalCommitment\"\r\n                ref={register()}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-md-6\">\r\n              <label className=\"m-2\">Total Commitment from Others:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control p-2\"\r\n                readOnly\r\n                name=\"totalCommitmentCollection\"\r\n                ref={register()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <label className=\"m-2\">Total Collection from Others:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control p-2\"\r\n                id=\"totalCollection\"\r\n                name=\"totalCollection\"\r\n                readOnly\r\n                ref={register()}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">Reference:</label>\r\n\r\n              <div>\r\n                <GetReferenceDetails refId={donorRef} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row mb-3 \">\r\n            <div className=\"col justify-content-center d-flex\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Update Details\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"mt-3\">\r\n        <div className=\"justify-content-center d-flex\">\r\n          <h2>Donation Details</h2>\r\n        </div>\r\n        <div className=\"justify-content-center d-flex\">\r\n          <Link to={`/acceptdonation/Donation/${params.donorId}`}>\r\n            Accept New Donation\r\n          </Link>\r\n          {/* <button className=\"btn btn-link \">Accept New Donation</button> */}\r\n        </div>\r\n        {donations ? (\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Donation Date</th>\r\n                  <th>Amount</th>\r\n                  <th>Bank</th>\r\n                  <th>Bank Reference</th>\r\n                  <th>Bank Refence Date</th>\r\n                  <th>Coolected by</th>\r\n                  <th>To Trust</th>\r\n                  <th>Mode</th>\r\n                  <th>Receipt</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <DonationDetails\r\n                  donations={donations}\r\n                  donorDetails={donorDetails}\r\n                  donationType=\"Donation\"\r\n                />\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        ) : (\r\n          <div className=\"justify-content-center d-flex\">\r\n            <h3>No donations</h3>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"mt-3\">\r\n        <div className=\"justify-content-center d-flex\">\r\n          <h2>Commitment Details</h2>\r\n        </div>\r\n        <div className=\"justify-content-center d-flex\">\r\n          <Link to={`/acceptdonation/Commitment/${params.donorId}`}>\r\n            Accept New Commitments\r\n          </Link>\r\n          {/* <button className=\"btn btn-link \">Accept New Donation</button> */}\r\n        </div>\r\n        {donations ? (\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Donation Date</th>\r\n                  <th>Amount</th>\r\n                  <th>Bank</th>\r\n                  <th>Bank Reference</th>\r\n                  <th>Bank Refence Date</th>\r\n                  <th>Coolected by</th>\r\n                  <th>To Trust</th>\r\n                  <th>Mode</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              {/* <tbody>\r\n                <CommitmentDetails commitments={commitments} />\r\n              </tbody> */}\r\n              <tbody>\r\n                <DonationDetails\r\n                  donations={donations}\r\n                  donorDetails={donorDetails}\r\n                  donationType=\"Commitment\"\r\n                />\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        ) : (\r\n          <div className=\"justify-content-center d-flex\">\r\n            <h3>No commitments</h3>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\DonationDetails.jsx",["160","161","162","163","164","165","166","167"],"import React, { memo, useState } from \"react\";\r\nimport GetReferenceDetails from \"./GetReferenceDetails\";\r\nimport { SiConvertio } from \"react-icons/si\";\r\nimport { RiDeleteBin2Fill } from \"react-icons/ri\";\r\nimport {\r\n  PDFViewer,\r\n  PDFDownloadLink,\r\n  Document,\r\n  Page,\r\n  ReactPDF,\r\n} from \"@react-pdf/renderer\";\r\nimport DonationReceipt from \"./DonationReceipt\";\r\nimport MyDialog from \"./MyDialog\";\r\nimport { firestore } from \"../firebase/config\";\r\nexport default memo(function DonationDetails({\r\n  donations,\r\n  donorDetails,\r\n  donationType,\r\n}) {\r\n  const [canOpenConvertDialog, setCanOpenConvertDialog] = useState(false);\r\n  const [currentCommitment, setCurrentCommitment] = useState(null);\r\n  const [canOpenDeleteDialog, setCanOpenDeleteDialog] = useState(false);\r\n\r\n  const handleConvertCommitmentDialogClose = () =>\r\n    setCanOpenConvertDialog(false);\r\n\r\n  const handleDeleteCommitmentDialogClose = () => setCanOpenDeleteDialog(false);\r\n\r\n  //Delete Commitment\r\n  //Update Commitment amount of the donor\r\n  //If commitment reference is other than the donor then update that donor's totalCollectionCommitment\r\n  const deleteCommitment = async () => {\r\n    console.log(\"Commitment will be delete!\");\r\n    setCanOpenDeleteDialog(false);\r\n    console.log(`Commitment id: ${currentCommitment.id}`);\r\n    await firestore\r\n      .collection(\"donors\")\r\n      .doc(donorDetails.id)\r\n      .collection(\"donations\")\r\n      .doc(currentCommitment.id)\r\n      .delete()\r\n      .then(async () => {\r\n        //Update Commitment amount of the donor\r\n        let donorTotalCommitment = donorDetails.totalCommitment;\r\n        let newDonorTotalCommitment =\r\n          parseInt(donorTotalCommitment) - parseInt(currentCommitment.amount);\r\n        console.log(`newDonorTotalCommitment: ${newDonorTotalCommitment}`);\r\n        await firestore\r\n          .collection(\"donors\")\r\n          .doc(donorDetails.id)\r\n          .update({ totalCommitment: newDonorTotalCommitment });\r\n\r\n        //If commitment reference is other than the donor then update that donor's totalCollectionCommitment\r\n        if (currentCommitment.collectedBy !== \"Self\") {\r\n          let refDonorId = currentCommitment.collectedBy;\r\n          //Get the values of refernce donors total commitment from others and total donations from otheres\r\n          const refDonorDoc = await firestore\r\n            .collection(\"donors\")\r\n            .doc(refDonorId)\r\n            .get();\r\n          if (refDonorDoc.exists) {\r\n            const refDonorData = refDonorDoc.data();\r\n            let totalRefCollection = parseInt(\r\n              refDonorData.totalCommitmentCollection\r\n            );\r\n            let totalRefCommitmentCollection = parseInt(\r\n              refDonorData.totalCommitmentCollection\r\n            );\r\n            console.log(`totalRefCollection: ${totalRefCollection}`);\r\n            console.log(\r\n              `totalRefCommitmentCollection: ${totalRefCommitmentCollection}`\r\n            );\r\n            await firestore\r\n              .collection(\"donors\")\r\n              .doc(refDonorId)\r\n              .update({\r\n                totalCommitmentCollection:\r\n                  totalRefCommitmentCollection -\r\n                  parseInt(currentCommitment.amount),\r\n              });\r\n          } //End of  if (refDonorDoc.exists)\r\n        } //end of if (currentCommitment.collectedBy !== \"Self\")\r\n\r\n        //End of promise\r\n      })\r\n      .catch((e) => {\r\n        console.log(`Error while deleting commitment: ${e}`);\r\n      });\r\n  }; //End of deleteCommitment\r\n\r\n  //Converts commitment to donation\r\n  //Checks: Donation date is today or in past\r\n  //Update total donation and commitment\r\n  const convertCommitmentToDonation = async () => {\r\n    setCanOpenConvertDialog(false);\r\n    // console.log(`donationId: ${currentCommitment.id}`);\r\n    // console.log(`currentCommitmentDate: ${currentCommitment.date}`);\r\n    let tDate = new Date();\r\n    let dDate = new Date(currentCommitment.date);\r\n    // console.log(`dDate.getTime(): ${dDate.getTime()}`);\r\n    // console.log(`tDate.getTime(): ${tDate.getTime()}`);\r\n    // console.log(`donorDetails.id: ${donorDetails.id}`);\r\n    // console.log(`Result:  ${dDate.getTime() > tDate.getTime()}`);\r\n    if (dDate.getTime() > tDate.getTime()) {\r\n      //   console.log(\"Future commitments cannot be converted to donation.\");\r\n      alert(\"Future commitments cannot be converted to donation.\");\r\n    } else {\r\n      console.log(\"Updating donation\");\r\n      await firestore\r\n        .collection(\"donors\")\r\n        .doc(donorDetails.id)\r\n        .collection(\"donations\")\r\n        .doc(currentCommitment.id)\r\n        .update({ type: \"Donation\" })\r\n        .then(async () => {\r\n          //Update total donaiton and total commitment amount of the donor\r\n          let currenttotalDonation = donorDetails.totalDonation;\r\n          let currentTotalCommitment = donorDetails.totalCommitment;\r\n          let donationAmount = currentCommitment.amount;\r\n          let newTotalDonation =\r\n            parseInt(currenttotalDonation) + parseInt(donationAmount);\r\n          let newTotalCommitment =\r\n            parseInt(currentTotalCommitment) - parseInt(donationAmount);\r\n          //   console.log(`currenttotalDonation: ${currenttotalDonation}`);\r\n          //   console.log(`currentTotalCommitment: ${currentTotalCommitment}`);\r\n          //   console.log(`newTotalDonation: ${newTotalDonation}`);\r\n          //   console.log(` newTotalCommitment: ${newTotalCommitment}`);\r\n          await firestore\r\n            .collection(\"donors\")\r\n            .doc(donorDetails.id)\r\n            .update({\r\n              totalDonation:\r\n                parseInt(currenttotalDonation) + parseInt(donationAmount),\r\n              totalCommitment:\r\n                parseInt(currentTotalCommitment) - parseInt(donationAmount),\r\n            })\r\n            .then()\r\n            .catch((e) =>\r\n              console.log(\r\n                `Error while updating donor's total donation after convering the commitment to donation: ${e}`\r\n              )\r\n            );\r\n\r\n          //If the donation is collected by other donor, update his total commitment from others and total\r\n          if (currentCommitment.collectedBy !== \"Self\") {\r\n            let refDonorId = currentCommitment.collectedBy;\r\n            //Get the values of refernce donors total commitment from others and total donations from otheres\r\n            const refDonorDoc = await firestore\r\n              .collection(\"donors\")\r\n              .doc(refDonorId)\r\n              .get();\r\n            if (refDonorDoc.exists) {\r\n              const refDonorData = refDonorDoc.data();\r\n              let totalRefCollection = parseInt(refDonorData.totalCollection);\r\n              let totalRefCommitmentCollection = parseInt(\r\n                refDonorData.totalCommitmentCollection\r\n              );\r\n              console.log(`totalRefCollection: ${totalRefCollection}`);\r\n              console.log(\r\n                `totalRefCommitmentCollection: ${totalRefCommitmentCollection}`\r\n              );\r\n              await firestore\r\n                .collection(\"donors\")\r\n                .doc(refDonorId)\r\n                .update({\r\n                  totalCollection:\r\n                    totalRefCollection + parseInt(donationAmount),\r\n                  totalCommitmentCollection:\r\n                    totalRefCommitmentCollection - parseInt(donationAmount),\r\n                });\r\n            } //End of  if (refDonorDoc.exists)\r\n          } //End oif (currentCommitment.collectedBy !== \"Self\")\r\n          //End of promise\r\n        })\r\n        .catch((e) => {\r\n          console.log(`Error in converting commitment to donation: ${e}`);\r\n        })\r\n        .finally();\r\n    } //End of if else - if(dDate.getTime() <= tDate.getTime())\r\n  }; //End of convertCommitmentToDonation\r\n\r\n  // const donationData = donations;\r\n  const pdfFile = React.createRef();\r\n  const donationList = donations.map((donation) => {\r\n    return (\r\n      <>\r\n        {donationType == donation.type ? (\r\n          <tr key={donation.id}>\r\n            <td>{donation.date}</td>\r\n            <td>{donation.amount}</td>\r\n            <td>{donation.bank}</td>\r\n            <td>{donation.bankRef}</td>\r\n            <td>{donation.bankRefDate}</td>\r\n            <td>\r\n              {donation.collectedBy == \"Self\" ? (\r\n                donorDetails.fullName\r\n              ) : (\r\n                <GetReferenceDetails refId={donation.collectedBy} />\r\n              )}\r\n            </td>{\" \"}\r\n            <td>{donation.trust}</td>\r\n            <td>{donation.mode}</td>\r\n            <td>\r\n              {donationType === \"Donation\" ? (\r\n                <PDFDownloadLink\r\n                  document={\r\n                    <DonationReceipt donation={donation} donor={donorDetails} />\r\n                  }\r\n                  fileName={donation.id}\r\n                  ref={pdfFile}\r\n                  className=\"btn btn-link\"\r\n                >\r\n                  {({ blob, url, loading, error }) =>\r\n                    loading ? \"Loading document...\" : \"Download here!\"\r\n                  }\r\n                </PDFDownloadLink>\r\n              ) : (\r\n                <>\r\n                  <button\r\n                    className=\"btn btn-outline\"\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      setCurrentCommitment(donation);\r\n                      setCanOpenConvertDialog(true);\r\n                    }}\r\n                  >\r\n                    <SiConvertio />\r\n                  </button>\r\n                  <MyDialog\r\n                    open={canOpenConvertDialog}\r\n                    handleClose={handleConvertCommitmentDialogClose}\r\n                    dialogTitle=\"Commitment Conversion Confirmation\"\r\n                    dialogText=\"Are you sure you want to convert this commitment to donation?\"\r\n                    handleDefault={convertCommitmentToDonation}\r\n                    defaultBtnText=\"Yes\"\r\n                    cancelBtnText=\"No\"\r\n                  />\r\n\r\n                  <button\r\n                    className=\"btn btn-outline\"\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      setCurrentCommitment(donation);\r\n                      setCanOpenDeleteDialog(true);\r\n                    }}\r\n                  >\r\n                    <RiDeleteBin2Fill />\r\n                  </button>\r\n                  <MyDialog\r\n                    open={canOpenDeleteDialog}\r\n                    handleClose={handleDeleteCommitmentDialogClose}\r\n                    dialogTitle=\"Commitment Delete Confirmation\"\r\n                    dialogText=\"Are you sure you want to delete this commitment?\"\r\n                    handleDefault={deleteCommitment}\r\n                    defaultBtnText=\"Yes\"\r\n                    cancelBtnText=\"No\"\r\n                  />\r\n                </>\r\n              )}\r\n            </td>\r\n          </tr>\r\n        ) : null}\r\n      </>\r\n    );\r\n  });\r\n  return <>{donationList}</>;\r\n});\r\n","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\CommitmentDetails.jsx",[],["168","169"],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\GetReferenceDetails.jsx",["170","171"],"import React, { memo, useEffect, useState } from 'react'\r\nimport { firestore } from '../firebase/config';\r\n\r\nexport default memo(function GetReferenceDetails(props) {\r\n    \r\n    const [refDetails, setRefDetails] = useState('');\r\n    useEffect(async () => {\r\n        const refId = props.refId;\r\n        console.log(`refId: ${refId}`);\r\n        console.log(`firestore: ${!!firestore}`);\r\n        if(!!firestore && refId != null && refId.length > 0){\r\n            await firestore.collection('donors').doc(refId).onSnapshot(snapshot => {\r\n                if (snapshot.exists) {\r\n                    setRefDetails(snapshot.data().fullName);\r\n                }\r\n            });//End of await firestore.collection('donors').\r\n        }//end of if(!!firestore)\r\n        \r\n    }, []);//End of useEffect \r\n    return (\r\n        <div>\r\n            {refDetails}\r\n        </div>\r\n    )\r\n})\r\n","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\AcceptDonation.jsx",["172","173","174","175"],"import React, { memo, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Redirect, useHistory, useParams } from \"react-router-dom\";\r\nimport { firestore } from \"../firebase/config\";\r\nimport { GetUserPrivilages } from \"../firebase/UserPrivilageProvider\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport { ErrorMessage } from \"@hookform/error-message\";\r\n\r\nexport default memo(function AcceptDonation(props) {\r\n  const { register, setValue, errors, handleSubmit } = useForm();\r\n  const privilages = GetUserPrivilages;\r\n  const params = useParams();\r\n  const history = useHistory();\r\n\r\n  const [donorRef, setDonorRef] = useState(\"\"); //Store donor ref's id\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const [totalDonation, setTotalDonation] = useState(0); //Total Donation\r\n  const [totalCommitment, setTotalCommitment] = useState(0); //Total Commitment\r\n  const [donorRefSearchQuery, setDonorRefSearchQuery] = useState(\"\"); //To store the query string of other donor ref\r\n  const [donorRefList, setDonorRefList] = useState(null); //To store the result of donor ref search\r\n  const [donorRefOption, setDonorRefOption] = useState(\"selfDonor\");\r\n  const [donorRefError, setDonorRefError] = useState(false);\r\n  const [donationMode, setDonationMode] = useState(\"Cheque\");\r\n  const [type, setType] = useState(\"\"); //To store donation type\r\n  const [dateError, setDateError] = useState(false);\r\n\r\n  const handleModeChange = (e) => {\r\n    setDonationMode(e.target.value);\r\n  };\r\n\r\n  const updateDonorRefValue = (donorRefId, donorRefFullName) => {\r\n    setDonorRef(donorRefId);\r\n    setDonorRefList(null);\r\n    setDonorRefSearchQuery(donorRefFullName);\r\n  };\r\n\r\n  const handleCollectedByOptions = (e) => {\r\n    setDonorRefOption(e.target.value);\r\n  }; //End of handleCollectedByOptions function\r\n\r\n  const handleDonorRefSearch = async (e) => {\r\n    e.preventDefault();\r\n    setDonorRefError(false);\r\n    console.log(\"in handleDonorRefSearch\");\r\n    const query = firestore\r\n      .collection(`donors`)\r\n      .where(\"fullName\", \">=\", donorRefSearchQuery)\r\n      .orderBy(\"fullName\")\r\n      .limit(3);\r\n    // console.log('first:');\r\n    // console.log(firstQuery);\r\n    const snapshot = await query\r\n      .get({ source: \"server\" })\r\n      .then((querySnapshot) => {\r\n        let donorRefList = [];\r\n        console.log(\"querySnapshot\");\r\n        console.log(querySnapshot);\r\n        querySnapshot.forEach((donorRef) => {\r\n          console.log(`Donor Ref Name: ${donorRef.data().fullName}`);\r\n          donorRefList.push({\r\n            donorId: donorRef.id,\r\n            fullName: donorRef.data().fullName,\r\n          });\r\n        }); //End of querySnapshot.forEach()\r\n        setDonorRefList(donorRefList);\r\n      }); //End of then(querySnapshot => {})\r\n  }; //end of const handleDonorRefSearch\r\n\r\n  useEffect(() => {\r\n    const donorId = params.donorId;\r\n    setType(params.type);\r\n    const docRef = firestore.collection(\"donors\").doc(donorId);\r\n    docRef.onSnapshot((snapshot) => {\r\n      if (snapshot.exists) {\r\n        const data = snapshot.data();\r\n        // setDonorRef(data.reference);\r\n        setTotalDonation(\r\n          data.totalDonation !== \"\" && data.totalDonation !== undefined\r\n            ? data.totalDonation\r\n            : 0\r\n        );\r\n        setTotalCommitment(\r\n          data.totalCommitment !== \"\" && data.totalCommitment !== undefined\r\n            ? data.totalCommitment\r\n            : 0\r\n        );\r\n        setValue(\"fullName\", data.fullName);\r\n        setValue(\"pan\", data.pan);\r\n        setValue(\"spiritualName\", data.spiritualName);\r\n\r\n        setValue(\r\n          \"dob\",\r\n          data.dob !== \"\" && data.dob !== undefined ? data.dob.toDate() : \"\"\r\n        );\r\n        setValue(\"email\", data.email);\r\n        setValue(\"phone\", data.phone);\r\n\r\n        setValue(\r\n          \"addressLine1\",\r\n          data.address !== \"\" && data.address !== undefined\r\n            ? data.address.addressLine1\r\n            : \"\"\r\n        );\r\n        setValue(\r\n          \"addressLine2\",\r\n          data.address !== \"\" && data.address !== undefined\r\n            ? data.address.addressLine2\r\n            : \"\"\r\n        );\r\n        setValue(\r\n          \"city\",\r\n          data.address !== \"\" && data.address !== undefined\r\n            ? data.address.city\r\n            : \"\"\r\n        );\r\n        setValue(\r\n          \"pin\",\r\n          data.address !== \"\" && data.address !== undefined\r\n            ? data.address.pin\r\n            : \"\"\r\n        );\r\n\r\n        setValue(\r\n          \"state\",\r\n          data.address !== \"\" && data.address !== undefined\r\n            ? data.address.state\r\n            : \"\"\r\n        );\r\n        setValue(\r\n          \"country\",\r\n          data.address !== \"\" && data.address !== undefined\r\n            ? data.address.country\r\n            : \"\"\r\n        );\r\n\r\n        setValue(\"reference\", data.reference);\r\n      } //End of if(snapshot.exists)\r\n    }); //End of const docRef ...\r\n  }, []); //End of useEffect\r\n\r\n  const acceptDonation = async (donationData) => {\r\n    let canProcess = false;\r\n    console.log(donationData);\r\n\r\n    //If the donor ref is self\r\n    let donorReference = \"\";\r\n    //The other option is selected but ref is not selected yet\r\n    if (donorRefOption === \"otherDonor\" && donorRef === \"\") {\r\n      setDonorRefError(true);\r\n      // donorReference = params.donorId;\r\n    } else {\r\n      //Check for valid donation date based on the type\r\n      //if type = Donation, date should today or in past\r\n      //else date should be in future\r\n      let tDate = new Date();\r\n      let dDate = new Date(donationData.date);\r\n      if (type === \"Donation\" && dDate.getTime() <= tDate.getTime()) {\r\n        canProcess = true;\r\n      } else if (type === \"Commitment\" && dDate.getTime() > tDate.getTime()) {\r\n        canProcess = true;\r\n      } else {\r\n        setDateError(true);\r\n      }\r\n    } //End of else if(donorRefOption === 'selfDonor')\r\n    if (canProcess) {\r\n      setisLoading(true);\r\n      if (donorRefOption === \"otherDonor\") {\r\n        //If donor ref is other and selected a valid donor\r\n        donorReference = donorRef;\r\n      } else if (donorRefOption === \"selfDonor\") {\r\n        //If donor ref is self, set the value as self\r\n        donorReference = \"Self\";\r\n      }\r\n\r\n      await firestore\r\n        .collection(\"donors\")\r\n        .doc(params.donorId)\r\n        .collection(\"donations\")\r\n        .add({\r\n          amount: donationData.amount,\r\n          bank: donationData.bank !== undefined ? donationData.bank : \"\",\r\n          bankRef:\r\n            donationData.bankRef !== undefined ? donationData.bankRef : \"\",\r\n          bankRefDate:\r\n            donationData.bankRefDate !== undefined\r\n              ? new Date(donationData.bankRefDate)\r\n              : \"\",\r\n          collectedBy: donorReference,\r\n          date: new Date(donationData.date),\r\n          mode: donationData.mode,\r\n          trust: donationData.trust,\r\n          created: new Date(),\r\n          type: type,\r\n        })\r\n        .then(async (res) => {\r\n          //Update the total donation or commitment amount of the donor as per the type value\r\n          if (type === \"Donation\") {\r\n            await firestore\r\n              .collection(\"donors\")\r\n              .doc(params.donorId)\r\n              .update({\r\n                totalDonation:\r\n                  parseInt(totalDonation) + parseInt(donationData.amount),\r\n              });\r\n          } else {\r\n            await firestore\r\n              .collection(\"donors\")\r\n              .doc(params.donorId)\r\n              .update({\r\n                totalCommitment:\r\n                  parseInt(totalCommitment) + parseInt(donationData.amount),\r\n              });\r\n          }\r\n\r\n          //If the collected by other then update that other person's total collection\r\n          if (\r\n            donorRefOption === \"otherDonor\" &&\r\n            donorReference !== params.donorId\r\n          ) {\r\n            //Get his total collection\r\n            const donorRef = firestore.collection(\"donors\").doc(donorReference);\r\n            const donorRefDoc = await donorRef.get();\r\n            if (donorRefDoc.exists) {\r\n              console.log(donorRefDoc.data());\r\n              let donorRefTotalCollection = donorRefDoc.data().totalCollection;\r\n              let donorRefTotalCommitmentCollection = donorRefDoc.data()\r\n                .totalCommitmentCollection;\r\n              //Update the total collection\r\n              if (type === \"Donation\") {\r\n                await firestore\r\n                  .collection(\"donors\")\r\n                  .doc(donorReference)\r\n                  .update({\r\n                    totalCollection:\r\n                      parseInt(donorRefTotalCollection) +\r\n                      parseInt(donationData.amount),\r\n                  });\r\n              } else {\r\n                await firestore\r\n                  .collection(\"donors\")\r\n                  .doc(donorReference)\r\n                  .update({\r\n                    totalCommitmentCollection:\r\n                      parseInt(donorRefTotalCommitmentCollection) +\r\n                      parseInt(donationData.amount),\r\n                  });\r\n              }\r\n            } //end of if(donorRefDoc.exists)\r\n          } //end of if(donorRefOption === 'otherDonor' && donorReference !== params.donorId)\r\n          setisLoading(false);\r\n          console.log(`result id: ${res.id}`);\r\n          history.push(`/donordetails/${params.donorId}`); //Navigate back to donor details\r\n        });\r\n    } //End of if(canProcess)\r\n  }; //End of acceptDonation\r\n  const formClass = `${isLoading ? \"ui form loading\" : \"\"}`;\r\n  return (\r\n    <div>\r\n      <div className=\"card\">\r\n        <div className=\"justify-content-center d-flex\">\r\n          <h2>Accpet {type}</h2>\r\n        </div>\r\n        <form className={formClass} onSubmit={handleSubmit(acceptDonation)}>\r\n          <label className=\"d-flex\">\r\n            <h4>Personal Details:</h4>\r\n          </label>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">Donor Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control ml-2\"\r\n                id=\"fullName\"\r\n                name=\"fullName\"\r\n                ref={register()}\r\n                readOnly\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">PAN:</label>\r\n              <input\r\n                type=\"input\"\r\n                className=\"form-control mr-2  p-2\"\r\n                ref={register()}\r\n                readOnly\r\n                name=\"pan\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <label className=\"d-flex\">\r\n            <h4>Communication Details:</h4>\r\n          </label>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">Email:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control ml-2\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                ref={register()}\r\n                readOnly\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">Phone:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control p-2\"\r\n                name=\"phone\"\r\n                readOnly\r\n                ref={register()}\r\n              />\r\n            </div>\r\n          </div>\r\n          <label className=\"d-flex\">\r\n            <h4>Address:</h4>\r\n          </label>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">Address Line1:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control ml-2\"\r\n                id=\"addressLine1\"\r\n                name=\"addressLine1\"\r\n                readOnly\r\n                ref={register()}\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">Address Line2:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control p-2\"\r\n                name=\"addressLine2\"\r\n                readOnly\r\n                ref={register()}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">City:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control ml-2\"\r\n                id=\"city\"\r\n                name=\"city\"\r\n                readOnly\r\n                ref={register()}\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">Pin Code:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control p-2\"\r\n                name=\"pin\"\r\n                readOnly\r\n                ref={register()}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">State:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control ml-2\"\r\n                id=\"state\"\r\n                name=\"state\"\r\n                readOnly\r\n                ref={register()}\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">Country:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control p-2\"\r\n                name=\"country\"\r\n                readOnly\r\n                ref={register()}\r\n              />\r\n            </div>\r\n          </div>\r\n          <label className=\"d-flex\">\r\n            <h4>Donation Details:</h4>\r\n          </label>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">Amount:</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control p-2\"\r\n                name=\"amount\"\r\n                ref={register({\r\n                  required: `Please enter a ${type} amount`,\r\n                  min: {\r\n                    value: 1,\r\n                    message: `Minimum ${type} amount should be more than zero`,\r\n                  },\r\n                  validate: {\r\n                    cashValidation: (value) =>\r\n                      donationMode === \"Cash\" ? value < 2001 : true,\r\n                  },\r\n                })}\r\n              />\r\n              {errors.amount?.type === \"cashValidation\" && (\r\n                <p className=\"text-danger\">\r\n                  You cannot accept more than Rs 2000 as cash\r\n                </p>\r\n              )}\r\n              <ErrorMessage\r\n                errors={errors}\r\n                name=\"amount\"\r\n                render={({ message }) => (\r\n                  <p className=\"text-danger\">{message}</p>\r\n                )}\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">{type} Date:</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control p-2\"\r\n                name=\"date\"\r\n                ref={register({\r\n                  required: `Please enter ${type} date.`,\r\n                })}\r\n                onChange={(e) => {\r\n                  setDateError(false);\r\n                }}\r\n              />\r\n              {dateError &&\r\n                (type === \"Donation\" ? (\r\n                  <p className=\"text-danger\">\r\n                    Donation cannot be acepted for future date.\r\n                  </p>\r\n                ) : (\r\n                  <p className=\"text-danger\">\r\n                    Commitment cannot be taken of past date or today.\r\n                  </p>\r\n                ))}\r\n              <ErrorMessage\r\n                errors={errors}\r\n                name=\"date\"\r\n                render={({ message }) => (\r\n                  <p className=\"text-danger\">{message}</p>\r\n                )}\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">Mode:</label>\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    id=\"Cheque\"\r\n                    name=\"mode\"\r\n                    value=\"Cheque\"\r\n                    ref={register({\r\n                      required: `Please select ${type} mode.`,\r\n                    })}\r\n                    onChange={handleModeChange}\r\n                    checked={donationMode === \"Cheque\"}\r\n                  />{\" \"}\r\n                  <label for=\"Cheque\">Cheque</label>\r\n                  <br />\r\n                  {type === \"Donation \" && (\r\n                    <span>\r\n                      <input\r\n                        type=\"radio\"\r\n                        id=\"DD\"\r\n                        name=\"mode\"\r\n                        value=\"DD\"\r\n                        ref={register({\r\n                          required: `Please select ${type} mode.`,\r\n                        })}\r\n                        onChange={handleModeChange}\r\n                        checked={donationMode === \"DD\"}\r\n                      />{\" \"}\r\n                      <label for=\"DD\">DD</label>\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <div className=\"col\">\r\n                  {type === \"Donation\" && (\r\n                    <span>\r\n                      <input\r\n                        type=\"radio\"\r\n                        id=\"NEFT\"\r\n                        name=\"mode\"\r\n                        value=\"NEFT\"\r\n                        ref={register({\r\n                          required: `Please select ${type} mode.`,\r\n                        })}\r\n                        onChange={handleModeChange}\r\n                        checked={donationMode === \"NEFT\"}\r\n                      />{\" \"}\r\n                      <label for=\"NEFT\">NEFT</label>\r\n                      <br />\r\n                    </span>\r\n                  )}\r\n                  <input\r\n                    type=\"radio\"\r\n                    id=\"Cash\"\r\n                    name=\"mode\"\r\n                    value=\"Cash\"\r\n                    ref={register({\r\n                      required: `Please select ${type} mode.`,\r\n                    })}\r\n                    onChange={handleModeChange}\r\n                    checked={donationMode === \"Cash\"}\r\n                  />{\" \"}\r\n                  <label for=\"Cash\">Cash</label>\r\n                  <br />\r\n                  <ErrorMessage\r\n                    errors={errors}\r\n                    name=\"mode\"\r\n                    render={({ message }) => (\r\n                      <p className=\"text-danger\">{message}</p>\r\n                    )}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {donationMode !== \"Cash\" && donationMode !== \"Other\" && (\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col\">\r\n                <label className=\"m-2\">Bank Name:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"bank\"\r\n                  name=\"bank\"\r\n                  ref={register({\r\n                    required: \"Please enter bank name\",\r\n                  })}\r\n                />\r\n                <ErrorMessage\r\n                  errors={errors}\r\n                  name=\"bank\"\r\n                  render={({ message }) => (\r\n                    <p className=\"text-danger\">{message}</p>\r\n                  )}\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <label className=\"m-2\">{donationMode} Reference:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control ml-2\"\r\n                  id=\"bankRef\"\r\n                  name=\"bankRef\"\r\n                  ref={register({\r\n                    required: `Please enter ${donationMode} reference.`,\r\n                  })}\r\n                />\r\n                <ErrorMessage\r\n                  errors={errors}\r\n                  name=\"bankRef\"\r\n                  render={({ message }) => (\r\n                    <p className=\"text-danger\">{message}</p>\r\n                  )}\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <label className=\"m-2\">{donationMode} Date:</label>\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control ml-2\"\r\n                  id=\"bankRefDate\"\r\n                  name=\"bankRefDate\"\r\n                  ref={register({\r\n                    required: `Please enter ${donationMode} date`,\r\n                  })}\r\n                />\r\n                <ErrorMessage\r\n                  errors={errors}\r\n                  name=\"bankRefDate\"\r\n                  render={({ message }) => (\r\n                    <p className=\"text-danger\">{message}</p>\r\n                  )}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n          <label className=\"d-flex\">\r\n            <h4>Additional Details:</h4>\r\n          </label>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">To Trust:</label>\r\n              <br></br>\r\n              <input\r\n                type=\"radio\"\r\n                id=\"SCSS\"\r\n                name=\"trust\"\r\n                value=\"SCSS\"\r\n                ref={register({\r\n                  required: `Please select the trust to which the ${type} is made.`,\r\n                })}\r\n              />{\" \"}\r\n              <label for=\"SCSS\">Sri Chaitanya Shikshan Sanstha</label>\r\n              <br />\r\n              <input\r\n                type=\"radio\"\r\n                id=\"CREST\"\r\n                name=\"trust\"\r\n                value=\"CREST\"\r\n                ref={register({\r\n                  required: `Please select the trust to which the ${type} is made.`,\r\n                })}\r\n              />{\" \"}\r\n              <label for=\"CREST\">\r\n                Chaitanya Research & Edcational Services Trust\r\n              </label>{\" \"}\r\n              <br />\r\n              <ErrorMessage\r\n                errors={errors}\r\n                name=\"trust\"\r\n                render={({ message }) => (\r\n                  <p className=\"text-danger\">{message}</p>\r\n                )}\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <label className=\"m-2\">Collected By:</label>\r\n              <br />\r\n              <input\r\n                type=\"radio\"\r\n                id=\"selfDonor\"\r\n                name=\"collectedBy\"\r\n                value=\"selfDonor\"\r\n                checked={donorRefOption === \"selfDonor\"}\r\n                onChange={handleCollectedByOptions}\r\n              />{\" \"}\r\n              <label for=\"selfDonor\">Self</label>\r\n              <br />\r\n              <input\r\n                type=\"radio\"\r\n                id=\"otherDonor\"\r\n                name=\"collectedBy\"\r\n                value=\"otherDonor\"\r\n                checked={donorRefOption === \"otherDonor\"}\r\n                onChange={handleCollectedByOptions}\r\n              />{\" \"}\r\n              <label for=\"otherDonor\">Other</label>\r\n            </div>\r\n            <div className=\"col\">\r\n              {donorRefOption === \"otherDonor\" ? (\r\n                <div>\r\n                  <label className=\"m-2\">\r\n                    If collected by is \"Other\", please search the same here\r\n                  </label>\r\n                  <br />\r\n                  <input\r\n                    placeholder=\"Search Here\"\r\n                    name=\"searchRef\"\r\n                    value={donorRefSearchQuery}\r\n                    onChange={(e) => setDonorRefSearchQuery(e.target.value)}\r\n                  />\r\n                  <button\r\n                    className=\"btn btn-outline\"\r\n                    type=\"button\"\r\n                    onClick={handleDonorRefSearch}\r\n                  >\r\n                    <AiOutlineSearch />\r\n                  </button>\r\n                  <br />\r\n                  {donorRefList && (\r\n                    <DonorRefList\r\n                      queryList={donorRefList}\r\n                      updateDonorRefValue={updateDonorRefValue}\r\n                    />\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {donorRefError && (\r\n                <div className=\"text-danger\">\r\n                  Please select a reference for the {type}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"row mb-3 \">\r\n            <div className=\"col justify-content-center d-flex\">\r\n              <button type=\"submit\" className=\"btn btn-primary mr-2\">\r\n                Accept {type}\r\n              </button>{\" \"}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary ml-2\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  history.push(`/donordetails/${params.donorId}`);\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport const DonorRefList = (props) => {\r\n  const donorRefQueryList = props.queryList;\r\n\r\n  const donorRefList = donorRefQueryList.map((donorRef) => {\r\n    return (\r\n      <>\r\n        <div className=\"list-group-item d-flex list-group-item-info\">\r\n          <button\r\n            className=\"btn btn-link\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              props.updateDonorRefValue(donorRef.donorId, donorRef.fullName);\r\n            }}\r\n            key={donorRef.donorId}\r\n          >\r\n            {donorRef.fullName}\r\n          </button>\r\n        </div>\r\n      </>\r\n    );\r\n  });\r\n\r\n  return <div>{donorRefList}</div>;\r\n};\r\n","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\DonationReceipt.jsx",["176","177","178","179","180","181","182","183","184"],"import React, { memo, useEffect, useState } from 'react'\r\nimport { Page, Text, View, Document, StyleSheet, Image } from \"@react-pdf/renderer\";\r\nimport logo from '../img/BMSLogo.jpg';\r\nimport { useSession } from '../firebase/UserProvider';\r\nimport { firestore } from '../firebase/config';\r\n\r\n// Create styles\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n    //   flexDirection: \"row\",\r\n      backgroundColor: '#ffffff',\r\n      borderTop: '5px solid red'\r\n    },\r\n    section: {\r\n      margin: 10,\r\n      padding: 10,\r\n    //   border: '5px solid red',\r\n      borderColor: '#000000',\r\n      borderWidth : 5,\r\n      borderStyle: 'solid',\r\n      textAlign: 'center',\r\n      backgroundColor: '#ffffff' \r\n      //flexGrow: 1\r\n    },\r\n    imgStyle : {\r\n        width: 50,\r\n        height: 30,\r\n    },\r\n    headerText: {\r\n        fontSize: 25,\r\n        fontWeight: 'bold'\r\n    },\r\n    subHeaderText: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold'\r\n    },\r\n    smallText: {\r\n        fontSize: 10,\r\n        fontWeight: 'normal'\r\n    },\r\n    smallLeftText: {\r\n        fontSize: 10,\r\n        fontWeight: 'normal',\r\n        textAlign : 'left'\r\n    },\r\n    smallRightText: {\r\n        fontSize: 10,\r\n        fontWeight: 'normal',\r\n        textAlign : 'right'\r\n    },\r\n    normalLeftText: {\r\n        fontSize: 15,\r\n        fontWeight: 'normal',\r\n        textAlign : 'left'\r\n    },\r\n  });\r\nexport default memo(function DonationReceipt(props) {\r\n    const [crestAddress] = useState('Flat# B601, Golok Vrindavan, Tilekar Nagar, Behind ISKCON Temple, Kondhwa Pune - 48');\r\n    const [scssAddress] = useState('4, Tarapore Road, Camp, Pune - 01');\r\n    const [crestReg] = useState('MH.894/2015/PUNE');\r\n    const [scsstReg] = useState('MH.894/2015/PUNE');\r\n    const [crestPAN] = useState('AABTC8218M');\r\n    const [scssPAN] = useState('AAKTS9670C');\r\n    const [donationDate, setDonationDate] = useState('');\r\n    const [donationAmountInWord, setDonationAmountInWord] = useState('');\r\n    const [donationBankRefDate, setDonationBankRefDate] = useState('');\r\n\r\n    const getMonthInWord = (iMonth) => {\r\n        switch (iMonth) {\r\n            case 0: return 'January';\r\n            case 1: return 'February';\r\n            case 2: return 'March';\r\n            case 3: return 'April';    \r\n            case 4: return 'May';\r\n            case 5: return 'June';\r\n            case 6: return 'July';\r\n            case 7: return 'August';\r\n            case 8: return 'September';\r\n            case 9: return 'October';\r\n            case 10: return 'November';\r\n            case 11: return 'December';\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        //Get donation date as string\r\n        const dDate = new Date(props.donation.date);\r\n\r\n        let sDate = dDate.getDate();\r\n        let sMonth = getMonthInWord(dDate.getMonth());\r\n        let sYear = dDate.getFullYear();\r\n\r\n        setDonationDate('' + sDate + '-' + sMonth + '-' + sYear);\r\n\r\n        //Get Bank ref date as string\r\n        let bankRefDate = props.donation.bankRefDate;\r\n        if(bankRefDate !== '' && bankRefDate !== undefined){\r\n            const dBankRefDate = new Date(bankRefDate);\r\n            sDate = dBankRefDate.getDate();\r\n            sMonth = getMonthInWord(dBankRefDate.getMonth());;\r\n            sYear = dBankRefDate.getFullYear();\r\n\r\n            setDonationBankRefDate('' +  sDate + '-' + sMonth + '-' + sYear);\r\n        }\r\n\r\n        //Get the donation amount wordings\r\n        let num = props.donation.amount;\r\n        var a = ['','One ','Two ','Three ','Four ', 'Five ','Six ','Seven ','Eight ','Nine ','Ten ','Eleven ','Twelve ','Thirteen ','Fourteen ','Fifteen ','Sixteen ','Seventeen ','Eighteen ','Nineteen '];\r\n        var b = ['', '', 'Twenty','Thirty','Forty','Fifty', 'Sixty','Seventy','Eighty','Ninety'];\r\n        if ((num = num.toString()).length > 9) return 'overflow';\r\n          let n = ('000000000' + num).substr(-9).match(/^(\\d{2})(\\d{2})(\\d{2})(\\d{1})(\\d{2})$/);\r\n          if (!n) return; var str = '';\r\n          str += (n[1] != 0) ? (a[Number(n[1])] || b[n[1][0]] + ' ' + a[n[1][1]]) + 'Crore ' : '';\r\n          str += (n[2] != 0) ? (a[Number(n[2])] || b[n[2][0]] + ' ' + a[n[2][1]]) + 'Lakh ' : '';\r\n          str += (n[3] != 0) ? (a[Number(n[3])] || b[n[3][0]] + ' ' + a[n[3][1]]) + 'Thousand ' : '';\r\n          str += (n[4] != 0) ? (a[Number(n[4])] || b[n[4][0]] + ' ' + a[n[4][1]]) + 'Hundred ' : '';\r\n          str += (n[5] != 0) ? ((str != '') ? 'and ' : '') + (a[Number(n[5])] || b[n[5][0]] + ' ' + a[n[5][1]]) + '' : '';\r\n          setDonationAmountInWord( str + \"only\");\r\n    }, [])\r\n\r\n    return (\r\n        <Document>\r\n            <Page size=\"A4\" style={styles.page}>\r\n            \r\n            <View style={styles.section}>\r\n                <View style={{alignContent: 'flex-start'}}>\r\n                    {/* <Image src=\"../public/img/BMS Logo.jpg\" /> */}\r\n                    <Image src={logo} alt='BMS Logo'style={styles.imgStyle}/>\r\n                    <Text style={styles.headerText}>{props.donation.trust === 'CREST' ? `Chaitnaya Research & Educational Services Trust` :\r\n                'Sri Chaitanya Shikshan Santha'}</Text>\r\n                    <View>\r\n                        <Text style={styles.smallText}>{props.donation.trust === 'CREST' ? crestAddress : scssAddress}</Text>\r\n                        <Text style={styles.smallText}>Registered under MH act {props.donation.trust === 'CREST' ? crestReg : scsstReg}</Text>\r\n                        <Text style={styles.smallText}>Trust PAN: {props.donation.trust === 'CREST' ? crestPAN : scssPAN}</Text>\r\n                        <Text style={styles.subHeaderText}>RECEIPT</Text>\r\n                        <Text style={styles.smallLeftText}>No: {props.donation.id}</Text>\r\n                        <Text style={styles.smallRightText }>Date: {donationDate}</Text>\r\n                        <Text>\r\n                            Receive with thanks, a sum of Rupees {donationAmountInWord} through {props.donation.mode} {props.donation.mode === 'Cash' ? '' : `with ${props.donation.mode} No: ${props.donation.bankRef} dated ${donationBankRefDate}`} from {props.donor.fullName}\r\n                        </Text>\r\n                        <Text style={styles.normalLeftText }>PAN: {props.donor.pan}</Text>\r\n                        {!!props.donor.phone && <Text style={styles.normalLeftText }>Phone: {props.donor.phone}</Text>}\r\n                        {!!props.donor.email && <Text style={styles.normalLeftText }>Email: {props.donor.email}</Text>}\r\n                        <Text style={styles.normalLeftText }>Address: {props.donor.address.addressLine1}</Text>\r\n                        <Text style={styles.normalLeftText }>{props.donor.address.addressLine2}</Text>\r\n                        <Text style={styles.normalLeftText }>{props.donor.address.city} {props.donor.address.pin}</Text>\r\n                        <Text style={styles.normalLeftText }>{props.donor.address.state} {props.donor.address.country}</Text>\r\n                        <Text>{' '}</Text>\r\n                        <Text style={styles.normalLeftText }> Rs: {props.donation.amount}/-</Text>\r\n                        <Text style={styles.smallRightText }>{'-------------------------------'}</Text>\r\n                        <Text style={styles.smallRightText }>For {props.donation.trust === 'CREST' ? 'Chaitnaya Research & Educational Services Trust' :\r\n                'Sri Chaitanya Shikshan Santha'}</Text>\r\n                    </View>\r\n                </View>\r\n                \r\n            </View>\r\n            <View style={styles.section}>\r\n                <View style={{alignContent: 'flex-start'}}>\r\n                    {/* <Image src=\"../public/img/BMS Logo.jpg\" /> */}\r\n                    <Image src={logo} alt='BMS Logo'style={styles.imgStyle}/>\r\n                    <Text style={styles.headerText}>{props.donation.trust === 'CREST' ? `Chaitnaya Research & Educational Services Trust` :\r\n                'Sri Chaitanya Shikshan Santha'}</Text>\r\n                    <View>\r\n                        <Text style={styles.smallText}>{props.donation.trust === 'CREST' ? crestAddress : scssAddress}</Text>\r\n                        <Text style={styles.smallText}>Registered under MH act {props.donation.trust === 'CREST' ? crestReg : scsstReg}</Text>\r\n                        <Text style={styles.smallText}>Trust PAN: {props.donation.trust === 'CREST' ? crestPAN : scssPAN}</Text>\r\n                        <Text style={styles.subHeaderText}>RECEIPT</Text>\r\n                        <Text style={styles.smallLeftText}>No: {props.donation.id}</Text>\r\n                        <Text style={styles.smallRightText }>Date: {donationDate}</Text>\r\n                        <Text>\r\n                            Receive with thanks, a sum of Rupees {donationAmountInWord} through {props.donation.mode} {props.donation.mode === 'Cash' ? '' : `with ${props.donation.mode} No: ${props.donation.bankRef} dated ${donationBankRefDate}`} from {props.donor.fullName}\r\n                        </Text>\r\n                        <Text style={styles.normalLeftText }>PAN: {props.donor.pan}</Text>\r\n                        {!!props.donor.phone && <Text style={styles.normalLeftText }>Phone: {props.donor.phone}</Text>}\r\n                        {!!props.donor.email && <Text style={styles.normalLeftText }>Email: {props.donor.email}</Text>}\r\n                        <Text style={styles.normalLeftText }>Address: {props.donor.address.addressLine1}</Text>\r\n                        <Text style={styles.normalLeftText }>{props.donor.address.addressLine2}</Text>\r\n                        <Text style={styles.normalLeftText }>{props.donor.address.city} {props.donor.address.pin}</Text>\r\n                        <Text style={styles.normalLeftText }>{props.donor.address.state} {props.donor.address.country}</Text>\r\n                        <Text>{' '}</Text>\r\n                        <Text style={styles.normalLeftText }> Rs: {props.donation.amount}/-</Text>\r\n                        <Text style={styles.smallRightText }>{'-------------------------------'}</Text>\r\n                        <Text style={styles.smallRightText }>For {props.donation.trust === 'CREST' ? 'Chaitnaya Research & Educational Services Trust' :\r\n                'Sri Chaitanya Shikshan Santha'}</Text>\r\n                    </View>\r\n                </View>\r\n                \r\n            </View>\r\n            </Page>\r\n        </Document>\r\n    )\r\n})\r\n",["185","186"],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\MyDialog.jsx",[],"D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\Sidebar.jsx",["187"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\n\r\nimport \"../styles/Sidebar.css\";\r\n\r\nimport { useSession } from \"../firebase/UserProvider\";\r\n\r\nfunction Sidebar() {\r\n  const [navbar, setNavBar] = useState(false);\r\n  // const [profileNavMenuDropdown, setProfileMenuDropdown] = useState(false);\r\n  const [donorNavMenuDropdown, setDonorNavMenuDropdown] = useState(false);\r\n  const showSidebar = () => setNavBar(!navbar);\r\n  // const history = useHistory();\r\n  const { user } = useSession();\r\n\r\n  const toggleNavigation = () => {\r\n    setNavBar(!navbar);\r\n  };\r\n\r\n  const toggleDonorNavMenuDropdown = () => {\r\n    setDonorNavMenuDropdown(!donorNavMenuDropdown);\r\n  };\r\n  return (\r\n    <>\r\n      {user && (\r\n        <>\r\n          <button\r\n            type=\"button\"\r\n            aria-label=\"Toggle Navigation\"\r\n            className=\"navbar-toggler position-absolute d-md-none collapsed pb-2\"\r\n            onClick={toggleNavigation}\r\n          >\r\n            <FaIcons.FaBars onClick={showSidebar} />\r\n          </button>\r\n          <div className=\"float-left sidebar pt-4\">\r\n            <nav\r\n              id=\"sideMenu\"\r\n              className={`d-md-block bg-light collapse ${navbar ? \"show\" : \"\"}`}\r\n            >\r\n              <div className=\"sidebar-sticky pt-3\">\r\n                <ul className=\"nav flex-column\">\r\n                  <li className=\"nav-item text-center\">\r\n                    <Link className=\"sidebar-menu-item \" to=\"/\">\r\n                      Home\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item text-center\">\r\n                    <button\r\n                      className=\"btn btn-link sidebar-menu-item\"\r\n                      onClick={toggleDonorNavMenuDropdown}\r\n                    >\r\n                      Donor Management System\r\n                    </button>\r\n                    {/* <div className=\"row\"> */}\r\n                    <nav\r\n                      className={`col bg-light ${\r\n                        donorNavMenuDropdown ? \"showMenu\" : \"hideMenu\"\r\n                      }`}\r\n                    >\r\n                      {/* <div className=\"sidebar-sticky pt-3\"> */}\r\n                      <ul className=\"nav flex-column pl-2\">\r\n                        <li className=\"nav-item pb-4\">\r\n                          <Link className=\"\" to=\"/donorsearch\">\r\n                            - Search a Donor\r\n                          </Link>\r\n                        </li>\r\n                        <li className=\"nav-item pb-4\">\r\n                          <Link className=\"\" to=\"/addnewdonor\">\r\n                            - Add a New Donor\r\n                          </Link>\r\n                        </li>\r\n                        <li className=\"nav-item pb-4\">\r\n                          <Link className=\"\" to=\"/\">\r\n                            - Donor Report\r\n                          </Link>\r\n                        </li>\r\n                      </ul>\r\n                      {/* </div> */}\r\n                    </nav>\r\n                    {/* </div> */}\r\n                  </li>\r\n                  <li className=\"nav-item pb-4 text-center\">\r\n                    <Link className=\"sidebar-menu-item\" to=\"/\">\r\n                      User Management\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </nav>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n    // <>\r\n    //   <IconContext.Provider value={{ color: \"#fff\" }}>\r\n    //     <div className=\"navbar\">\r\n    //       <div className=\"row w-100\">\r\n    //         <div className=\"col-3 pt-3\">\r\n    //           {user && (\r\n    //             <Link to=\"#\" className=\"menu-bars pt-3\">\r\n    //               <FaIcons.FaBars onClick={showSidebar} />\r\n    //             </Link>\r\n    //           )}\r\n    //         </div>\r\n    //         <div className=\"col-6 text-center display-1\">\r\n    //           <h1 className=\"text-white\">The Title here</h1>\r\n    //         </div>\r\n    //         <div className=\"col-3 text-right text-white\">\r\n    //           {user && (\r\n    //             <>\r\n    //               <button\r\n    //                 className=\"btn brn-link\"\r\n    //                 type=\"button\"\r\n    //                 data-toggle=\"collapse\"\r\n    //                 data-target=\"user-menu\"\r\n    //               >\r\n    //                 <img\r\n    //                   src={user ? user.photoURL : \"\"}\r\n    //                   className=\"rounded-circle\"\r\n    //                   style={{ height: \"32px\" }}\r\n    //                 />\r\n    //               </button>\r\n    //               <div id=\"user-menu\" className=\"\">\r\n    //                 <button\r\n    //                   className=\"btn btn-link text-white\"\r\n    //                   onClick={signOutUser}\r\n    //                 >\r\n    //                   Logout\r\n    //                 </button>\r\n    //               </div>\r\n    //             </>\r\n    //           )}\r\n    //         </div>\r\n    //       </div>\r\n    //     </div>\r\n    //     {user && (\r\n    //       <div className={navbar ? \"nav-menu active\" : \"nav-menu\"}>\r\n    //         <ul className=\"nav-menu-items\" onClick={showSidebar}>\r\n    //           <li className=\"navbar-toggle\">\r\n    //             <Link to=\"#\" className=\"menu-bars\">\r\n    //               <AiIcons.AiOutlineClose />\r\n    //             </Link>\r\n    //           </li>\r\n    //           {SidebarData.map((item, index) => {\r\n    //             return (\r\n    //               <li key={index} className={item.cName}>\r\n    //                 <Link to={item.path}>\r\n    //                   {item.icon}\r\n    //                   <span>{item.title}</span>\r\n    //                 </Link>\r\n    //               </li>\r\n    //             );\r\n    //           })}\r\n    //         </ul>\r\n    //       </div>\r\n    //     )}\r\n    //   </IconContext.Provider>\r\n    // </>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\AddANewDonor.jsx",["188","189"],"import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { GetUserPrivilages } from \"../firebase/UserPrivilageProvider\";\r\nfunction AddANewDonor() {\r\n  const { register, setValue, handleSubmit, errors } = useForm();\r\n  const privilages = GetUserPrivilages();\r\n\r\n  const addDonorDetails = () => {};\r\n  return (\r\n    <div>\r\n      <div className=\"card\">\r\n        <div className=\"justify-content-center d-flex\">\r\n          <h2>Add a New Donor</h2>\r\n        </div>\r\n      </div>\r\n      <form className=\"\" onSubmit={handleSubmit(addDonorDetails)}>\r\n        <label className=\"d-flex\">\r\n          <p className=\"text-danger\">Fields marked * are mandatory</p>\r\n        </label>\r\n        <label className=\"d-flex\">\r\n          <h4 className=\"p-2\">Personal Details:</h4>\r\n        </label>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <label className=\"m-2\">\r\n              Donor Name:<span className=\"text-danger\">*</span>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control ml-2\"\r\n              id=\"fullName\"\r\n              name=\"fullName\"\r\n              ref={register({\r\n                required: \"Please enter donor name\",\r\n                minLength: {\r\n                  value: 3,\r\n                  message: \"Please enter at least 3 characters for name\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.fullName?.message && (\r\n              <p className=\"text-danger\">{errors.fullName?.message}</p>\r\n            )}\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <label className=\"m-2\">\r\n              PAN:<span className=\"text-danger\">*</span>\r\n            </label>\r\n            <input\r\n              type=\"input\"\r\n              className=\"form-control ml-2\"\r\n              name=\"pan\"\r\n              ref={register({\r\n                required: \"Please enter PAN of the donor\",\r\n                pattern: {\r\n                  value: /[A-Z]{5}[0-9]{4}[A-Z]{1}/,\r\n                  message: \"Please enter a valid PAN number in capital letters\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.pan?.message && (\r\n              <p className=\"text-danger\">{errors.pan?.message}</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col-md-6\">\r\n            <label className=\"m-2\">Spiritual Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control ml-2\"\r\n              id=\"dob\"\r\n              name=\"spiritualName\"\r\n              ref={register({\r\n                required: \"Please enter PAN of the donor\",\r\n                pattern: {\r\n                  value: /\\D/,\r\n                  message: \"Please enter a only characters\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.spiritualName?.message && (\r\n              <p className=\"text-danger\">{errors.spiritualName?.message}</p>\r\n            )}\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <label className=\"m-2\">\r\n              Date of Birth:<span className=\"text-danger\">*</span>\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              className=\"form-control ml-2\"\r\n              name=\"dob\"\r\n              ref={register({\r\n                required: \"Please enter date of birth\",\r\n                pattern: {},\r\n              })}\r\n            />\r\n          </div>\r\n        </div>\r\n        <label className=\"d-flex\">\r\n          <h4 className=\"p-2\">Communication Details:</h4>\r\n        </label>\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col-md-6\">\r\n            <label className=\"m-2\">Email:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control ml-2\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              ref={register()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <label className=\"m-2\">Phone:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control ml-2\"\r\n              name=\"phone\"\r\n              ref={register()}\r\n            />\r\n          </div>\r\n        </div>\r\n        <label className=\"d-flex\">\r\n          <h4 className=\"p-2\">Address:</h4>\r\n        </label>\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col-md-6\">\r\n            <label className=\"m-2\">Address Line1:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control ml-2\"\r\n              id=\"addressLine1\"\r\n              name=\"addressLine1\"\r\n              ref={register()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <label className=\"m-2\">Address Line2:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control ml-2\"\r\n              name=\"addressLine2\"\r\n              ref={register()}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col-md-6\">\r\n            <label className=\"m-2\">City:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control ml-2\"\r\n              id=\"city\"\r\n              name=\"city\"\r\n              ref={register()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <label className=\"m-2\">Pin Code:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control ml-2\"\r\n              name=\"pin\"\r\n              ref={register()}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col-md-6\">\r\n            <label className=\"m-2\">State:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control ml-2\"\r\n              id=\"state\"\r\n              name=\"state\"\r\n              ref={register()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <label className=\"m-2\">Country:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control ml-2\"\r\n              name=\"country\"\r\n              ref={register()}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row mb-3 \">\r\n          <div className=\"col justify-content-center d-flex\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Save\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddANewDonor;\r\n","D:\\work_dsi\\Kaushik\\ReactJS\\firebase_google_auth\\src\\pages\\SidebarData.jsx",["190","191"],"import React from \"react\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as IoIcons from \"react-icons/io\";\r\nimport * as BsIcons from \"react-icons/bs\";\r\n\r\nexport const SidebarData = [\r\n  {\r\n    title: \"Home\",\r\n    path: \"/\",\r\n    icon: <AiIcons.AiFillHome />,\r\n    cName: \"nav-text\",\r\n  },\r\n  {\r\n    title: \"Donors\",\r\n    path: \"/donorsearch\",\r\n    icon: <BsIcons.BsFillPersonLinesFill />,\r\n    cName: \"nav-text\",\r\n  },\r\n];\r\n",{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":42,"column":7,"nodeType":"198","endLine":42,"endColumn":13,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":12},{"ruleId":"200","severity":1,"message":"204","line":7,"column":13,"nodeType":"202","messageId":"203","endLine":7,"endColumn":20},{"ruleId":"200","severity":1,"message":"205","line":8,"column":13,"nodeType":"202","messageId":"203","endLine":8,"endColumn":20},{"ruleId":"200","severity":1,"message":"206","line":9,"column":10,"nodeType":"202","messageId":"203","endLine":9,"endColumn":21},{"ruleId":"200","severity":1,"message":"207","line":11,"column":10,"nodeType":"202","messageId":"203","endLine":11,"endColumn":21},{"ruleId":"200","severity":1,"message":"208","line":15,"column":16,"nodeType":"202","messageId":"203","endLine":15,"endColumn":23},{"ruleId":"200","severity":1,"message":"209","line":24,"column":9,"nodeType":"202","messageId":"203","endLine":24,"endColumn":19},{"ruleId":"200","severity":1,"message":"210","line":39,"column":9,"nodeType":"202","messageId":"203","endLine":39,"endColumn":17},{"ruleId":"196","severity":1,"message":"211","line":50,"column":6,"nodeType":"198","endLine":50,"endColumn":8,"suggestions":"212"},{"ruleId":"213","severity":1,"message":"214","line":121,"column":17,"nodeType":"215","endLine":125,"endColumn":19},{"ruleId":"200","severity":1,"message":"216","line":5,"column":10,"nodeType":"202","messageId":"203","endLine":5,"endColumn":19},{"ruleId":"200","severity":1,"message":"217","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":16},{"ruleId":"200","severity":1,"message":"218","line":24,"column":19,"nodeType":"202","messageId":"203","endLine":24,"endColumn":25},{"ruleId":"200","severity":1,"message":"219","line":1,"column":9,"nodeType":"202","messageId":"203","endLine":1,"endColumn":15},{"ruleId":"220","severity":1,"message":"221","line":18,"column":6,"nodeType":"222","endLine":18,"endColumn":16},{"ruleId":"200","severity":1,"message":"223","line":25,"column":19,"nodeType":"202","messageId":"203","endLine":25,"endColumn":27},{"ruleId":"200","severity":1,"message":"224","line":16,"column":10,"nodeType":"202","messageId":"203","endLine":16,"endColumn":21},{"ruleId":"200","severity":1,"message":"225","line":16,"column":23,"nodeType":"202","messageId":"203","endLine":16,"endColumn":37},{"ruleId":"200","severity":1,"message":"226","line":32,"column":10,"nodeType":"202","messageId":"203","endLine":32,"endColumn":27},{"ruleId":"200","severity":1,"message":"227","line":32,"column":29,"nodeType":"202","messageId":"203","endLine":32,"endColumn":46},{"ruleId":"200","severity":1,"message":"228","line":33,"column":10,"nodeType":"202","messageId":"203","endLine":33,"endColumn":29},{"ruleId":"200","severity":1,"message":"229","line":35,"column":9,"nodeType":"202","messageId":"203","endLine":35,"endColumn":38},{"ruleId":"196","severity":1,"message":"230","line":42,"column":13,"nodeType":"231","endLine":192,"endColumn":4},{"ruleId":"232","severity":1,"message":"233","line":157,"column":40,"nodeType":"231","messageId":"234","endLine":157,"endColumn":42},{"ruleId":"200","severity":1,"message":"235","line":165,"column":17,"nodeType":"202","messageId":"203","endLine":165,"endColumn":28},{"ruleId":"196","severity":1,"message":"236","line":192,"column":6,"nodeType":"198","endLine":192,"endColumn":8,"suggestions":"237"},{"ruleId":"200","severity":1,"message":"238","line":6,"column":3,"nodeType":"202","messageId":"203","endLine":6,"endColumn":12},{"ruleId":"200","severity":1,"message":"239","line":8,"column":3,"nodeType":"202","messageId":"203","endLine":8,"endColumn":11},{"ruleId":"200","severity":1,"message":"240","line":9,"column":3,"nodeType":"202","messageId":"203","endLine":9,"endColumn":7},{"ruleId":"200","severity":1,"message":"241","line":10,"column":3,"nodeType":"202","messageId":"203","endLine":10,"endColumn":11},{"ruleId":"200","severity":1,"message":"242","line":120,"column":15,"nodeType":"202","messageId":"203","endLine":120,"endColumn":31},{"ruleId":"200","severity":1,"message":"243","line":122,"column":15,"nodeType":"202","messageId":"203","endLine":122,"endColumn":33},{"ruleId":"244","severity":1,"message":"245","line":187,"column":23,"nodeType":"246","messageId":"247","endLine":187,"endColumn":25},{"ruleId":"244","severity":1,"message":"245","line":195,"column":37,"nodeType":"246","messageId":"247","endLine":195,"endColumn":39},{"ruleId":"192","replacedBy":"248"},{"ruleId":"194","replacedBy":"249"},{"ruleId":"196","severity":1,"message":"230","line":7,"column":15,"nodeType":"231","endLine":19,"endColumn":6},{"ruleId":"196","severity":1,"message":"250","line":19,"column":8,"nodeType":"198","endLine":19,"endColumn":10,"suggestions":"251"},{"ruleId":"200","severity":1,"message":"252","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":18},{"ruleId":"200","severity":1,"message":"209","line":11,"column":9,"nodeType":"202","messageId":"203","endLine":11,"endColumn":19},{"ruleId":"200","severity":1,"message":"223","line":52,"column":11,"nodeType":"202","messageId":"203","endLine":52,"endColumn":19},{"ruleId":"196","severity":1,"message":"253","line":139,"column":6,"nodeType":"198","endLine":139,"endColumn":8,"suggestions":"254"},{"ruleId":"200","severity":1,"message":"255","line":4,"column":10,"nodeType":"202","messageId":"203","endLine":4,"endColumn":20},{"ruleId":"200","severity":1,"message":"216","line":5,"column":10,"nodeType":"202","messageId":"203","endLine":5,"endColumn":19},{"ruleId":"244","severity":1,"message":"256","line":115,"column":24,"nodeType":"246","messageId":"247","endLine":115,"endColumn":26},{"ruleId":"244","severity":1,"message":"256","line":116,"column":24,"nodeType":"246","messageId":"247","endLine":116,"endColumn":26},{"ruleId":"244","severity":1,"message":"256","line":117,"column":24,"nodeType":"246","messageId":"247","endLine":117,"endColumn":26},{"ruleId":"244","severity":1,"message":"256","line":118,"column":24,"nodeType":"246","messageId":"247","endLine":118,"endColumn":26},{"ruleId":"244","severity":1,"message":"256","line":119,"column":24,"nodeType":"246","messageId":"247","endLine":119,"endColumn":26},{"ruleId":"244","severity":1,"message":"256","line":119,"column":38,"nodeType":"246","messageId":"247","endLine":119,"endColumn":40},{"ruleId":"196","severity":1,"message":"257","line":121,"column":8,"nodeType":"198","endLine":121,"endColumn":10,"suggestions":"258"},{"ruleId":"192","replacedBy":"259"},{"ruleId":"194","replacedBy":"260"},{"ruleId":"200","severity":1,"message":"261","line":2,"column":16,"nodeType":"202","messageId":"203","endLine":2,"endColumn":26},{"ruleId":"200","severity":1,"message":"262","line":5,"column":21,"nodeType":"202","messageId":"203","endLine":5,"endColumn":29},{"ruleId":"200","severity":1,"message":"209","line":6,"column":9,"nodeType":"202","messageId":"203","endLine":6,"endColumn":19},{"ruleId":"200","severity":1,"message":"204","line":2,"column":13,"nodeType":"202","messageId":"203","endLine":2,"endColumn":20},{"ruleId":"200","severity":1,"message":"263","line":4,"column":13,"nodeType":"202","messageId":"203","endLine":4,"endColumn":20},"no-native-reassign",["264"],"no-negated-in-lhs",["265"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["266"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'FaIcons' is defined but never used.","'AiIcons' is defined but never used.","'SidebarData' is defined but never used.","'IconContext' is defined but never used.","'setMenu' is assigned a value but never used.","'privilages' is assigned a value but never used.","'showMenu' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'profileNavMenuDropdown'. Either include it or remove the dependency array.",["267"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'firestore' is defined but never used.","'firebase' is defined but never used.","'docRef' is assigned a value but never used.","'Navbar' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'snapshot' is assigned a value but never used.","'commitments' is assigned a value but never used.","'setCommitments' is assigned a value but never used.","'areThereDonations' is assigned a value but never used.","'thereAreDonations' is assigned a value but never used.","'areThereCommitments' is assigned a value but never used.","'updateCommitmentDisplayStatus' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'bankRefDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'params.donorId' and 'setValue'. Either include them or remove the dependency array.",["268"],"'PDFViewer' is defined but never used.","'Document' is defined but never used.","'Page' is defined but never used.","'ReactPDF' is defined but never used.","'newTotalDonation' is assigned a value but never used.","'newTotalCommitment' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["264"],["265"],"React Hook useEffect has a missing dependency: 'props.refId'. Either include it or remove the dependency array.",["269"],"'Redirect' is defined but never used.","React Hook useEffect has missing dependencies: 'params.donorId', 'params.type', and 'setValue'. Either include them or remove the dependency array.",["270"],"'useSession' is defined but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'props.donation.amount', 'props.donation.bankRefDate', and 'props.donation.date'. Either include them or remove the dependency array.",["271"],["264"],["265"],"'useHistory' is defined but never used.","'setValue' is assigned a value but never used.","'IoIcons' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},"Update the dependencies array to be: [props.history, user]",{"range":"284","text":"285"},"Update the dependencies array to be: [profileNavMenuDropdown]",{"range":"286","text":"287"},"Update the dependencies array to be: [params.donorId, setValue]",{"range":"288","text":"289"},"Update the dependencies array to be: [props.refId]",{"range":"290","text":"291"},"Update the dependencies array to be: [params.donorId, params.type, setValue]",{"range":"292","text":"293"},"Update the dependencies array to be: [props.donation.amount, props.donation.bankRefDate, props.donation.date]",{"range":"294","text":"295"},[1446,1452],"[props.history, user]",[1603,1605],"[profileNavMenuDropdown]",[6773,6775],"[params.donorId, setValue]",[771,773],"[props.refId]",[4972,4974],"[params.donorId, params.type, setValue]",[4622,4624],"[props.donation.amount, props.donation.bankRefDate, props.donation.date]"]